-- =============================================
--
-- Author:		
-- Create date: 2016-06-05
-- Description:	
--		Return all native key columns that where not derived from Extended Fields in previous load step
--		Xml format <Column IsUsed="false" SourceColumn="myCol" TargetColumn="myCol"></Column>
-- Example:	
--
--
-- =============================================
CREATE FUNCTION [ssis].[GetUnionErrorInputColumns] (
	@SOURCE_TABLE_CATALOG VARCHAR(max)
	,@DESTINATION_TABLE_CATALOG VARCHAR(max)
	,@DESTINATION_SCHEMA_NAME VARCHAR(max)
	,@DESTINATION_TABLE_NAME VARCHAR(max)
	,@USAGE_TYPE VARCHAR(50)
	)
RETURNS XML
AS
BEGIN
	DECLARE @ExtendedCols AS TABLE (
		column_name VARCHAR(128)
		,ordinal_position INT
		,r TINYINT
		,UsageType VARCHAR(50)
		)

	INSERT INTO @ExtendedCols
	VALUES (
		'CheckSumNonPK'
		,1
		,2
		,'dwDim'
		)
		,(
		'OldCheckSumNonPK'
		,2
		,2
		,'dwDim'
		)

	DECLARE @DerivedColumns XML

	SELECT @DerivedColumns = (
			SELECT 'false' AS '@IsUsed'
				,column_name AS '@SourceColumn'
				,column_name AS '@TargetColumn'
			FROM (
				SELECT COLUMN_NAME
					,ORDINAL_POSITION
					,1 AS r
				FROM [Metadata].[DestinationTableSourceField] dtsf
				WHERE [DestinationTableCatalog] = @DESTINATION_TABLE_CATALOG
					AND [DestinationSchemaName] = @DESTINATION_SCHEMA_NAME
					AND [DestinationTableName] = @DESTINATION_TABLE_NAME
					-- Exclude primay keys and column_names generated by extended fields in prev stage
					AND NOT EXISTS (
						SELECT COLUMN_NAME
						FROM Metadata.TableKeyDefinition
						WHERE TableCatalog = @DESTINATION_TABLE_CATALOG
							AND TableName = @DESTINATION_TABLE_NAME
							AND column_name = dtsf.column_name
							AND KeyType = 'PK'
						
						EXCEPT
						
						SELECT [COLUMN_NAME]
						FROM [Metadata].[DestinationFieldExtended]
						WHERE DestinationTableCatalog = @DESTINATION_TABLE_CATALOG
							AND SourceTableCatalog = @SOURCE_TABLE_CATALOG
							AND IsNull(ApplicableTable, @DESTINATION_TABLE_NAME) = @DESTINATION_TABLE_NAME
						)
					AND (
						(
							column_name != 'HistoryRecId'
							AND @USAGE_TYPE = 'dwDim'
							)
						)
				
				UNION
				
				SELECT column_name
					,ordinal_position
					,r
				FROM @ExtendedCols
				WHERE UsageType = @USAGE_TYPE
				) Cols
			ORDER BY r
				,ORDINAL_POSITION
			FOR XML path('Column')
			)

	RETURN @DerivedColumns
END