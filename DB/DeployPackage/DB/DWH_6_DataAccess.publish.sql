/*
Deployment script for DWH_6_DataAccess

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DWH_3_Fact "DWH_3_Fact"
:setvar DatabaseName "DWH_6_DataAccess"
:setvar DefaultFilePrefix "DWH_6_DataAccess"
:setvar DefaultDataPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Finnish_Swedish_CI_AS
GO
PRINT N'Creating [Norm_Data]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [Norm_Data];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [Norm_Data_48D3DDFB], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Norm_Data_48D3DDFB.mdf') TO FILEGROUP [Norm_Data];


GO
PRINT N'Creating [Norm_Index]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [Norm_Index];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [Norm_Index_2F6C4E2], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Norm_Index_2F6C4E2.mdf') TO FILEGROUP [Norm_Index];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [CityNetwork]...';


GO
CREATE SCHEMA [CityNetwork]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [DEMO]...';


GO
CREATE SCHEMA [DEMO]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ExOpen]...';


GO
CREATE SCHEMA [ExOpen]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [FinanceOLAP]...';


GO
CREATE SCHEMA [FinanceOLAP]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [FundOLAP]...';


GO
CREATE SCHEMA [FundOLAP]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [QS]...';


GO
CREATE SCHEMA [QS]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [CityNetwork].[d_Area]...';


GO
CREATE VIEW CityNetwork.d_Area
AS
SELECT da.Area_key
     , da.Area_bkey
     , da.AreaName
     , MetroNetworkManager= Employee_MetroNetworkManager_key.FieldValue
     , RegionConstructionManager = Employee_RegionConstructionManager_key.FieldValue
     , DeliveryStreamLeader = Employee_DeliveryStreamLeader_key.FieldValue
     , ConstructionManager = Employee_ConstructionManager_key.FieldValue
     , ConstructionStatus = SugarEnum_ConstructionStatus_key.FieldValue
     , SalesStatus = SugarEnum_SalesStatus_key.FieldValue
     , SourcingStatus = SugarEnum_SourcingStatus_key.FieldValue
     , IikStatus = SugarEnum_IikStatus_key.FieldValue
     , AreaType = SugarEnum_AreaType_key.FieldValue
     , Contractor = SugarEnum_Contractor_key.FieldValue
     , SalesOrganisation = SugarEnum_SalesOrganisation_key.FieldValue
     , ConstructionOrganisation = SugarEnum_ConstructionOrganisation_key.FieldValue
     , SubsidyArea = SugarEnum_SubsidyArea_key.FieldValue
     , ProjectDesign = SugarEnum_ProjectDesign_key.FieldValue
     , CountyAdvisoryBoardStatus = SugarEnum_CountyAdvisoryBoardStatus_key.FieldValue
     , da.InitialSalesStart
     , da.AfterMarketSalesStart
     , da.StrategicNetworkPlanningComplete
     , da.LeasedUplinkExpected
     , da.LeasedUplinkDeployed
     , da.TRVPermissionNeeded
     , da.SumOfTRVNeeded
     , da.SumOfTRVSubmitted
     , da.SumOfTRVApproved
     , da.ExpectedApprovalOfTRV
     , da.AllTRVApplicationsSubmitted
     , da.AllTRVApplicationsApproved
     , da.CommentOnTRV
     , da.MunicipalLandPermit
     , da.BuildingPermitApproved
     , da.AllBuildingPermitsSubmitted
     , da.CommentOnBuildingPermit
     , da.PlannedInstallationStart
     , da.PlannedInstallationComplete
     , da.PlannedConstructionStart
     , da.FinalDocumentationComplete 
FROM [$(DWH_3_Fact)].Fact.d_Area da
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum Employee_MetroNetworkManager_key ON Employee_MetroNetworkManager_key.SugarEnum_key = da.Employee_MetroNetworkManager_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum Employee_RegionConstructionManager_key ON Employee_RegionConstructionManager_key.SugarEnum_key = da.Employee_RegionConstructionManager_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum Employee_DeliveryStreamLeader_key ON Employee_DeliveryStreamLeader_key.SugarEnum_key = da.Employee_DeliveryStreamLeader_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum Employee_ConstructionManager_key ON Employee_ConstructionManager_key.SugarEnum_key = da.Employee_DeliveryStreamLeader_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_ConstructionStatus_key ON SugarEnum_ConstructionStatus_key.SugarEnum_key = da.SugarEnum_ConstructionStatus_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_SalesStatus_key ON SugarEnum_SalesStatus_key.SugarEnum_key = da.SugarEnum_SalesStatus_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_SourcingStatus_key ON SugarEnum_SourcingStatus_key.SugarEnum_key = da.SugarEnum_SourcingStatus_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_IikStatus_key ON SugarEnum_IikStatus_key.SugarEnum_key = da.SugarEnum_IikStatus_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_AreaType_key ON SugarEnum_AreaType_key.SugarEnum_key = da.SugarEnum_AreaType_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_Contractor_key ON SugarEnum_Contractor_key.SugarEnum_key = da.SugarEnum_Contractor_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_SalesOrganisation_key ON SugarEnum_SalesOrganisation_key.SugarEnum_key = da.SugarEnum_SalesOrganisation_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_ConstructionOrganisation_key ON SugarEnum_ConstructionOrganisation_key.SugarEnum_key = da.SugarEnum_ConstructionOrganisation_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_SubsidyArea_key ON SugarEnum_SubsidyArea_key.SugarEnum_key = da.SugarEnum_SubsidyArea_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_ProjectDesign_key ON SugarEnum_ProjectDesign_key.SugarEnum_key = da.SugarEnum_ProjectDesign_key
INNER JOIN [$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_CountyAdvisoryBoardStatus_key ON SugarEnum_CountyAdvisoryBoardStatus_key.SugarEnum_key = da.SugarEnum_CountyAdvisoryBoardStatus_key
GO
PRINT N'Creating [CityNetwork].[d_Customer]...';


GO
CREATE VIEW CityNetwork.d_Customer
AS

SELECT dc.Customer_key
     , dc.CustomerName
     , dc.Email
     , dc.MobilePhoneNo
     , dc.PersonalIdentityNumber
     , dc.OrganizationNumber
     , dc.Age
     , dc.Gender 
FROM [$(DWH_3_Fact)].Fact.d_Customer dc
GO
PRINT N'Creating [CityNetwork].[d_Geography]...';


GO
CREATE VIEW CityNetwork.d_Geography
AS
SELECT dg.Geography_key     
     , dg.GeographyName
     , dg.MunicipalityCode
     , dg.MunicipalityNamn
     , dg.StateCode
     , dg.StateNamn
     , dg.RegionCode
     , dg.RegionName 
FROM [$(DWH_3_Fact)].Fact.d_Geography dg
GO
PRINT N'Creating [CityNetwork].[d_Project]...';


GO
CREATE VIEW CityNetwork.d_Project
AS

SELECT dp.Project_key     
     , dp.ProjectName
     , dp.ProgramID
     , dp.Category1ID
     , dp.Category2ID
     , dp.PlanFinish
     , dp.CloseDate 
FROM [$(DWH_3_Fact)].Fact.d_Project dp
GO
PRINT N'Creating [CityNetwork].[f_Penetration]...';


GO
CREATE VIEW [CityNetwork].[f_Penetration]
AS
SELECT Calendar_key = CAST(CAST(fp.Calendar_key AS NVARCHAR(8)) AS DATE)
     , fp.Opportunity_key
     , fp.Area_key
     , fp.Project_key
     , fp.SalesOrder_key
     , fp.Customer_key
     , fp.Access_key
     , fp.NoOfHP
     , fp.NoOfHC
     , fp.NoOfInstalled 
FROM [$(DWH_3_Fact)].Fact.f_Penetration fp
GO
PRINT N'Creating [CityNetwork].[f_Subscription]...';


GO
CREATE VIEW CityNetwork.f_Subscription
AS

SELECT  fs.Subscription_key
      , fs.SubscriptionProduct_key
      , fs.Access_key
      , fs.ServiceProvider_key
      , Calendar_key = CAST(CAST(fs.Calendar_key AS NVARCHAR(8)) AS DATE)
	  , Customer_key = ISNULL(t.Customer_key, -1)
      , CustomerType = IIF(t.Customer_key IS NULL, 'MDU', 'SDU')
	  , fs.NoOfActivation          	  
FROM    [$(DWH_3_Fact)].Fact.f_Subscription fs
LEFT JOIN (SELECT do.Access_key, dso.SalesOrder_key AS Customer_key FROM [$(DWH_3_Fact)].Fact.d_Opportunity do INNER JOIN [$(DWH_3_Fact)].Fact.d_SalesOrder dso ON dso.Opportunity_key = do.Opportunity_key WHERE do.Access_key <> -1) t
	ON t.Access_key = fs.Access_key
GO
PRINT N'Creating [CityNetwork].[d_CustomerCategory]...';


GO

CREATE VIEW CityNetwork.d_CustomerCategory
AS

SELECT  dcc.CustomerCategory_key	
		 , dcc.CustomerTypeCategory
		 , dcc.CustomerTypeCategoryDetail 
FROM [$(DWH_3_Fact)].Fact.d_CustomerCategory dcc
GO
PRINT N'Creating [CityNetwork].[d_Opportunity]...';


GO
CREATE VIEW CityNetwork.d_Opportunity
AS
SELECT		do.Opportunity_key
			, do.SysDatetimeDeletedUTC
			, do.Opportunity_bkey
			, do.CustomerCategory_key
			, do.OpportunityName
			, do.AddressStreetAndNo
			, do.AddressPostalCode
			, do.AddressStreetName
			, do.AddressStreetNo
			, do.AddressCity
			, do.AddressCountry
			, do.Latitude
			, do.Longitude
			, do.Fastighetsbeteckningc
			, do.AcquiredAccess
			, BusinessType = SugarEnum_BusinessType_key.FieldValue
FROM		[$(DWH_3_Fact)].Fact.d_Opportunity do
INNER JOIN	[$(DWH_3_Fact)].Fact.d_SugarEnum SugarEnum_BusinessType_key
			ON do.SugarEnum_BusinessType_key	= SugarEnum_BusinessType_key.SugarEnum_key
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
