/*
Deployment script for DWH_3_Fact

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DWH_3_Fact"
:setvar DefaultFilePrefix "DWH_3_Fact"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------



*/


CREATE TABLE #temp(sqlStatement nvarchar(max), rowNo int)
INSERT INTO #temp
SELECT sqlStatement = 'TRUNCATE TABLE ' + t.TABLE_CATALOG + '.[' + t.TABLE_SCHEMA + '].[' + t.TABLE_NAME + ']'
       , rowNo = ROW_NUMBER() OVER (ORDER BY t.TABLE_NAME)
FROM   INFORMATION_SCHEMA.TABLES t
WHERE t.TABLE_TYPE = 'BASE TABLE'

DECLARE @LastRowNo int = 1, @sqlStatement NVARCHAR(max)

WHILE (@LastRowNo IS NOT NULL)
BEGIN 
	
	SET @sqlStatement = (SELECT TOP 1 t.sqlStatement FROM #temp t WHERE t.rowNo = @LastRowNo)

	PRINT @sqlStatement
	
	EXEC (@sqlStatement)

	set @LastRowNo= (select top 1 rowNo from #temp where rowNo > @LastRowNo order by rowNo)
END

DROP TABLE #temp
GO

GO
PRINT N'Altering [Fact].[d_MLLoanApplication]...';


GO
ALTER TABLE [Fact].[d_MLLoanApplication]
    ADD [CustomerMainApplicant_key] INT NOT NULL,
        [CustomerCoApplicant_key]   INT NOT NULL;


GO
PRINT N'Altering [Sales].[d_LoanApplication]...';


GO

ALTER VIEW [Sales].[d_LoanApplication]
AS
SELECT  LoanApplication_key  = CAST(CAST(dla.MLLoanApplication_key AS NVARCHAR(50)) + '#ML' AS NVARCHAR(100))
       ,LoanApplication_bkey = CAST(dla.MLLoanApplication_bkey AS NVARCHAR(100))
       ,dla.ApplicationNumber
       ,dla.ApplicationLoanObject
       ,dla.ApplicationPurpose
       ,dla.ApplicationRefusal
       ,IsRefusal            = IIF(dla.ApplicationRefusal IN ( 'N/A', '' ), 0, 1)
       ,IsPayoutPlanned      = IIF(dla.PaidOutDate IS NULL, 'N', 'Y')
       ,dla.ContactWay
       ,Media                = dla.Media
       ,MediaCategoryName    = dla.MediaCategoryName
       ,MediaType            = dla.MediaType
       ,dla.InterestBond
       ,dla.ApplicationLoanType
       ,dla.CustomerSupportEmployee_CS_key
       ,dla.CustomerSupportEmployee_CSG_key
       ,dla.CustomerSupportEmployee_Credit_key
       ,Campaign             = dla.CampaignName
	   ,dla.PriceLevel
	   ,dla.CustomerMainApplicant_key
	   ,dla.CustomerCoApplicant_key
FROM    Fact.d_MLLoanApplication dla
--WHERE   dla.MLLoanApplication_key <> -1
UNION ALL
SELECT  LoanApplication_key                = CAST(fplam.PLLoanApplicationMetrics_key + '#PL' AS NVARCHAR(100))
       ,LoanApplication_bkey               = CAST(fplam.PLLoanApplicationMetrics_key + '#PL' AS NVARCHAR(100))
       ,fplam.ApplicationNumber
       ,ApplicationLoanObject              = UPPER(dul2.UcapLkpValue)
       ,ApplicationPurpose                 = UPPER(dul3.UcapLkpValue)
       ,ApplicationRefusal                 = IIF(dul.UcapLkpValue = 'Declined', dul1.UcapLkpValue, 'N/A')
       ,IsRefusal                          = IIF(dul.UcapLkpValue = 'Declined', 1, 0)
       ,IsPayoutPlanned                    = IIF(dul.UcapLkpValue = 'PoSentLetter', 'Y', 'N')
       ,ContactWay                         = 'N/A'
       ,Media                              = 'N/A'
       ,MediaCategoryName                  = 'N/A'
       ,MediaType                          = 'N/A'
       ,InterestBond                       = 'N/A'
       ,ApplicationLoanType                = 'N/A'
       ,CustomerSupportEmployee_CS_key     = -1
       ,CustomerSupportEmployee_CSG_key    = -1
       ,CustomerSupportEmployee_Credit_key = -1
       ,Campaign                           = 'N/A'
       ,PriceLevel                         = 'N/A'
	   ,CustomerMainApplicant_key		   = -1
	   ,CustomerCoApplicant_key			   = -1
FROM    Fact.f_PLLoanApplicationMetrics fplam
INNER JOIN  Fact.d_UcapLkp                  dul ON dul.UcapLkp_key   = fplam.UcapLkp_DWHPositionStatus_key
INNER JOIN  Fact.d_UcapLkp                  dul1 ON dul1.UcapLkp_key = fplam.UcapLkp_DWHPosition_key
INNER JOIN  Fact.d_UcapLkp                  dul2 ON dul2.UcapLkp_key = fplam.UcapLkp_LoanPurposeType_key
INNER JOIN  Fact.d_UcapLkp                  dul3 ON dul3.UcapLkp_key = fplam.UcapLkp_SelectedProduct_key
GO
PRINT N'Altering [Sales].[d_LoanCustomer]...';


GO




ALTER VIEW [Sales].[d_LoanCustomer]
AS

SELECT dmlc.MLLoanCustomer_key
      ,dmlc.BirthYear
	  ,dmlc.Gender
	  ,dmlc.City
      ,dmlc.Zip
      ,MaritalStatus		= dmlc.MaritalStatusText
      ,PriceLevel			= dmlc.PriceLevelText
      ,Riskgroup			= dmlc.RiskgroupText
      ,dmlc.DebtKFM
      ,AccomodationType		= dmlc.AccomodationTypeText
      ,dmlc.TotalNumberOfRemarks
      ,dmlc.NumberOfRemarks
      ,dmlc.TotalSumOfRemarks
      ,dmlc.SumOfRemarks
      ,dmlc.PrenupDateString
      ,dmlc.WarningText
	  ,dmlc.IsPep
      ,dmlc.AssessmentYear
      ,dmlc.AssessedIncome
      ,dmlc.IsBankrupt
      ,dmlc.LastRemarkDate
      ,dmlc.LastBankruptDate
      ,dmlc.TotalNumberOfMortgageRemarks
      ,dmlc.NumberOfMortgageRemarks
      ,dmlc.SumOfMortgageRemarks 
	  ,CASE 
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 0 AND (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) <= 18  THEN CAST('1-18' AS NVARCHAR(20))
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 18 AND (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) <= 29 THEN CAST('19-29' AS NVARCHAR(20))
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 29 AND (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) <= 39 THEN CAST('30-39' AS NVARCHAR(20))
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 39 AND (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) <= 49 THEN CAST('40-49' AS NVARCHAR(20))
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 49 AND (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) <= 64 THEN CAST('50-64' AS NVARCHAR(20))
			WHEN (DATEPART(YEAR, GETDATE()) - dmlc.BirthYear) > 64 THEN CAST('65 or more' AS NVARCHAR(20))
			ELSE CAST('N/A' AS NVARCHAR(20))
	   END Age
	   ,CASE
			WHEN dmlc.NumberOfRemarks > 0 THEN CAST('Ja' AS NVARCHAR(10)) 
			WHEN dmlc.NumberOfRemarks = 0 THEN CAST('Nej' AS NVARCHAR(10)) 
			ELSE CAST('N/A' AS NVARCHAR(10))
		END HasRemarks
FROM Fact.d_MLLoanCustomer dmlc
INNER JOIN Fact.b_MLLoanApplicationCustomer bmlac ON bmlac.MLLoanCustomer_key = dmlc.MLLoanCustomer_key
GO
PRINT N'Update complete.';


GO
