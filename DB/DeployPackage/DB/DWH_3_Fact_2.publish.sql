/*
Deployment script for DWH_3_Fact

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DWH_3_Fact"
:setvar DefaultFilePrefix "DWH_3_Fact"
:setvar DefaultDataPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Finnish_Swedish_CI_AS
GO
PRINT N'Creating [Fact_Index]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [Fact_Index];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [Fact_Index_1FC683D5], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Fact_Index_1FC683D5.mdf') TO FILEGROUP [Fact_Index];


GO
PRINT N'Creating [Fact_Data]...';


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILEGROUP [Fact_Data];


GO
ALTER DATABASE [$(DatabaseName)]
    ADD FILE (NAME = [Fact_Data_385B6554], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Fact_Data_385B6554.mdf') TO FILEGROUP [Fact_Data];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--TRUNCATE TABLE DWH_3_Fact.Fact.f_BridgeFundToPortfolioCompany
--TRUNCATE TABLE DWH_3_Fact.Fact.f_PortfolioCompanyTransactionOverview
--TRUNCATE TABLE DWH_3_Fact.Fact.f_PortfolioCompanyFinance
--TRUNCATE TABLE DWH_3_Fact.Fact.f_InvestmentTransaction
--TRUNCATE TABLE DWH_3_Fact.Fact.f_FundValueDriver
--TRUNCATE TABLE DWH_3_Fact.Fact.f_FundSummaryAndCommentary
--TRUNCATE TABLE DWH_3_Fact.Fact.d_PortfolioCompanyHistory
--TRUNCATE TABLE DWH_3_Fact.Fact.d_PortfolioCompanyContact
--TRUNCATE TABLE DWH_3_Fact.Fact.d_PortfolioCompany
--TRUNCATE TABLE DWH_3_Fact.Fact.f_PcHoldingPeriod
--TRUNCATE TABLE DWH_3_Fact.Fact.d_Fund
--TRUNCATE TABLE DWH_3_Fact.Fact.d_FundHistory
--TRUNCATE TABLE DWH_3_Fact.Fact.f_InvestmentTransactionAgg

--TRUNCATE TABLE DWH_2_Norm.Norm.n_InvestmentTransactionAgg
--TRUNCATE TABLE DWH_2_Norm.Norm.n_InvestmentTransactionDetail
--TRUNCATE TABLE DWH_2_Norm.Norm.n_BridgeFundToPortfolioCompany
--TRUNCATE TABLE DWH_2_Norm.Norm.n_PortfolioCompanyFinance
--TRUNCATE TABLE DWH_2_Norm.Norm.n_InvestmentTransaction
--TRUNCATE TABLE DWH_2_Norm.Norm.n_FundValueDriver
--TRUNCATE TABLE DWH_2_Norm.Norm.n_FundSummaryAndCommentary
--TRUNCATE TABLE DWH_2_Norm.Norm.n_PortfolioCompanyTransactionOverview
--TRUNCATE TABLE DWH_2_Norm.Norm.n_PortfolioCompanyHistory
--TRUNCATE TABLE DWH_2_Norm.Norm.n_FundHistory
--TRUNCATE TABLE DWH_2_Norm.Norm.n_PortfolioCompanyContact
--TRUNCATE TABLE DWH_2_Norm.Norm.n_Fund
--TRUNCATE TABLE DWH_2_Norm.Norm.n_InvestmentTransactionType
--TRUNCATE TABLE DWH_2_Norm.Norm.n_PortfolioCompany

--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_ValueDriver_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_PerfAssetSummery_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_AssetTransactionOverview_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_AssetSegment_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_PerfFundSummery_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_InvestmentTransaction_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_FundSummery_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_Cashflow_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_Asset_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_AssetFinance_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_ClientFund_01
--TRUNCATE TABLE DWH_1_Raw.iLevel_RawTyped.rt_FundToAsset_01

/*


CREATE TABLE #temp(sqlStatement nvarchar(max), rowNo int)
INSERT INTO #temp
SELECT sqlStatement = 'TRUNCATE TABLE ' + t.TABLE_CATALOG + '.' + t.TABLE_SCHEMA + '.' + t.TABLE_NAME
       , rowNo = ROW_NUMBER() OVER (ORDER BY t.TABLE_NAME)
FROM   INFORMATION_SCHEMA.TABLES t
WHERE t.TABLE_TYPE = 'BASE TABLE'

DECLARE @LastRowNo int = 1, @sqlStatement NVARCHAR(max)

WHILE (@LastRowNo IS NOT NULL)
BEGIN 
	
	SET @sqlStatement = (SELECT TOP 1 t.sqlStatement FROM #temp t WHERE t.rowNo = @LastRowNo)

	PRINT @sqlStatement
	
	EXEC (@sqlStatement)

	set @LastRowNo= (select top 1 rowNo from #temp where rowNo > @LastRowNo order by rowNo)
END
*/



GO

GO
PRINT N'Creating [Fact]...';


GO
CREATE SCHEMA [Fact]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Fact].[d_SugarEnum]...';


GO
CREATE TABLE [Fact].[d_SugarEnum] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SugarEnum_key]            INT            NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [SugarEnum_bkey]           NVARCHAR (250) NOT NULL,
    [FieldValue]               NVARCHAR (250) NULL,
    CONSTRAINT [PK_Fact_d_SugarEnum] PRIMARY KEY CLUSTERED ([SugarEnum_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_SugarEnum].[NCIDX_SysModifiedUTC_Fact_d_SugarEnum]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_SugarEnum]
    ON [Fact].[d_SugarEnum]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_SalesOrder]...';


GO
CREATE TABLE [Fact].[d_SalesOrder] (
    [SysExecutionLog_key]             INT            NOT NULL,
    [SysDatetimeInsertedUTC]          DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]           DATETIME2 (0)  NULL,
    [SysModifiedUTC]                  DATETIME2 (0)  NOT NULL,
    [SalesOrder_key]                  INT            NOT NULL,
    [SysDatetimeDeletedUTC]           DATETIME2 (0)  NULL,
    [SysIsInferred]                   BIT            NOT NULL,
    [SysValidFromDateTime]            DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]        DATETIME2 (0)  NULL,
    [SalesOrder_bkey]                 NVARCHAR (100) NOT NULL,
    [Opportunity_key]                 INT            NOT NULL,
    [SugarEnum_DeliveryStatus_key]    INT            NOT NULL,
    [SugarEnum_OrderType_key]         INT            NOT NULL,
    [SugarEnum_ConnectionType_key]    INT            NOT NULL,
    [SugarEnum_OrderSource_key]       INT            NOT NULL,
    [PlannedInstallationDate]         DATETIME2 (7)  NULL,
    [ProductBundleYN]                 NVARCHAR (100) NULL,
    [ProductBundleName]               NVARCHAR (255) NOT NULL,
    [Campaign6MonthInternet]          NVARCHAR (20)  NULL,
    [ConnectionFeeSEK]                MONEY          NOT NULL,
    [RotDeductionSEK]                 MONEY          NOT NULL,
    [RutDeductionSEK]                 MONEY          NOT NULL,
    [DiscountSEK]                     MONEY          NOT NULL,
    [ExtraFeeSEK]                     MONEY          NOT NULL,
    [ProductBundlePriceAdjustmentSEK] MONEY          NULL,
    [TotalRevenueSEK]                 MONEY          NULL,
    CONSTRAINT [PK_Fact_d_SalesOrder] PRIMARY KEY CLUSTERED ([SalesOrder_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_SalesOrder].[NCIDX_SysModifiedUTC_Fact_d_SalesOrder]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_SalesOrder]
    ON [Fact].[d_SalesOrder]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Project]...';


GO
CREATE TABLE [Fact].[d_Project] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [Project_key]              INT            NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Project_bkey]             NVARCHAR (100) NOT NULL,
    [ProjectName]              NVARCHAR (250) NOT NULL,
    [ProgramID]                NVARCHAR (100) NOT NULL,
    [Category1ID]              NVARCHAR (100) NOT NULL,
    [Category2ID]              NVARCHAR (100) NOT NULL,
    [PlanFinish]               DATETIME       NULL,
    [CloseDate]                DATETIME       NULL,
    CONSTRAINT [PK_Fact_d_Project] PRIMARY KEY CLUSTERED ([Project_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Project].[NCIDX_SysModifiedUTC_Fact_d_Project]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Project]
    ON [Fact].[d_Project]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Geography]...';


GO
CREATE TABLE [Fact].[d_Geography] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [Geography_key]            INT            NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Geography_bkey]           NVARCHAR (100) NOT NULL,
    [GeographyName]            NVARCHAR (255) NULL,
    [MunicipalityCode]         NVARCHAR (100) NULL,
    [MunicipalityNamn]         NVARCHAR (250) NULL,
    [StateCode]                NVARCHAR (100) NULL,
    [StateNamn]                NVARCHAR (250) NULL,
    [RegionCode]               NVARCHAR (100) NULL,
    [RegionName]               NVARCHAR (250) NULL,
    CONSTRAINT [PK_Fact_d_Geography] PRIMARY KEY CLUSTERED ([Geography_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Geography].[NCIDX_SysModifiedUTC_Fact_d_Geography]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Geography]
    ON [Fact].[d_Geography]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Customer]...';


GO
CREATE TABLE [Fact].[d_Customer] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [Customer_key]             INT            NOT NULL,
    [CustomerName]             NVARCHAR (511) NULL,
    [Email]                    NVARCHAR (255) NULL,
    [MobilePhoneNo]            NVARCHAR (255) NULL,
    [PersonalIdentityNumber]   NVARCHAR (255) NULL,
    [OrganizationNumber]       NVARCHAR (255) NOT NULL,
    [Age]                      INT            NULL,
    [Gender]                   VARCHAR (7)    NULL,
    CONSTRAINT [PK_Fact_d_Customer] PRIMARY KEY CLUSTERED ([Customer_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Customer].[NCIDX_SysModifiedUTC_Fact_d_Customer]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Customer]
    ON [Fact].[d_Customer]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Calendar]...';


GO
CREATE TABLE [Fact].[d_Calendar] (
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [Calendar_key]             INT           NOT NULL,
    [Calendar_bkey]            DATETIME      NOT NULL,
    [CalendarYear]             INT           NULL,
    [YearMonth]                VARCHAR (7)   NULL,
    [YearWeek]                 VARCHAR (8)   NULL,
    [YearQuarter]              VARCHAR (8)   NULL,
    [CalendarQuarter]          INT           NULL,
    [MonthofYear]              INT           NULL,
    [MonthName]                VARCHAR (10)  NULL,
    [WeekOfYear]               INT           NULL,
    [DayofWeek]                INT           NULL,
    [DayName]                  CHAR (10)     NULL,
    [DayofMonth]               INT           NULL,
    CONSTRAINT [PK_Fact_d_Calendar] PRIMARY KEY CLUSTERED ([Calendar_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Calendar].[NCIDX_SysModifiedUTC_Fact_d_Calendar]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Calendar]
    ON [Fact].[d_Calendar]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Area]...';


GO
CREATE TABLE [Fact].[d_Area] (
    [SysExecutionLog_key]                     INT            NOT NULL,
    [SysDatetimeInsertedUTC]                  DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]                   DATETIME2 (0)  NULL,
    [SysModifiedUTC]                          DATETIME2 (0)  NOT NULL,
    [Area_key]                                INT            NOT NULL,
    [SysDatetimeDeletedUTC]                   DATETIME2 (0)  NULL,
    [SysIsInferred]                           BIT            NOT NULL,
    [SysValidFromDateTime]                    DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]                DATETIME2 (0)  NULL,
    [Area_bkey]                               NVARCHAR (100) NOT NULL,
    [AreaName]                                NVARCHAR (255) NULL,
    [Geography_key]                           INT            NOT NULL,
    [Project_key]                             INT            NOT NULL,
    [Employee_MetroNetworkManager_key]        INT            NOT NULL,
    [Employee_RegionConstructionManager_key]  INT            NOT NULL,
    [Employee_DeliveryStreamLeader_key]       INT            NOT NULL,
    [Employee_ConstructionManager_key]        INT            NOT NULL,
    [SugarEnum_ConstructionStatus_key]        INT            NOT NULL,
    [SugarEnum_SalesStatus_key]               INT            NOT NULL,
    [SugarEnum_SourcingStatus_key]            INT            NOT NULL,
    [SugarEnum_IikStatus_key]                 INT            NOT NULL,
    [SugarEnum_AreaType_key]                  INT            NOT NULL,
    [SugarEnum_Contractor_key]                INT            NOT NULL,
    [SugarEnum_SalesOrganisation_key]         INT            NOT NULL,
    [SugarEnum_ConstructionOrganisation_key]  INT            NOT NULL,
    [SugarEnum_SubsidyArea_key]               INT            NOT NULL,
    [SugarEnum_ProjectDesign_key]             INT            NOT NULL,
    [SugarEnum_CountyAdvisoryBoardStatus_key] INT            NOT NULL,
    [InitialSalesStart]                       DATE           NULL,
    [AfterMarketSalesStart]                   DATE           NULL,
    [StrategicNetworkPlanningComplete]        DATE           NULL,
    [LeasedUplinkExpected]                    DATE           NULL,
    [LeasedUplinkDeployed]                    DATE           NULL,
    [TRVPermissionNeeded]                     NVARCHAR (100) NULL,
    [SumOfTRVNeeded]                          INT            NULL,
    [SumOfTRVSubmitted]                       INT            NULL,
    [SumOfTRVApproved]                        INT            NULL,
    [ExpectedApprovalOfTRV]                   DATE           NULL,
    [AllTRVApplicationsSubmitted]             DATE           NULL,
    [AllTRVApplicationsApproved]              DATE           NULL,
    [CommentOnTRV]                            NVARCHAR (255) NULL,
    [MunicipalLandPermit]                     DATE           NULL,
    [BuildingPermitApproved]                  DATE           NULL,
    [AllBuildingPermitsSubmitted]             DATE           NULL,
    [CommentOnBuildingPermit]                 NVARCHAR (255) NULL,
    [PlannedInstallationStart]                DATE           NULL,
    [PlannedInstallationComplete]             DATE           NULL,
    [PlannedConstructionStart]                DATE           NULL,
    [FinalDocumentationComplete]              DATE           NULL,
    CONSTRAINT [PK_Fact_d_Area] PRIMARY KEY CLUSTERED ([Area_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Area].[NCIDX_SysModifiedUTC_Fact_d_Area]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Area]
    ON [Fact].[d_Area]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Opportunity]...';


GO
CREATE TABLE [Fact].[d_Opportunity] (
    [SysExecutionLog_key]        INT             NOT NULL,
    [SysDatetimeInsertedUTC]     DATETIME2 (0)   NOT NULL,
    [SysDatetimeUpdatedUTC]      DATETIME2 (0)   NULL,
    [SysModifiedUTC]             DATETIME2 (0)   NOT NULL,
    [Opportunity_key]            INT             NOT NULL,
    [SysDatetimeDeletedUTC]      DATETIME2 (0)   NULL,
    [SysIsInferred]              BIT             NOT NULL,
    [SysValidFromDateTime]       DATETIME2 (0)   NOT NULL,
    [SysSrcGenerationDateTime]   DATETIME2 (0)   NULL,
    [Opportunity_bkey]           NVARCHAR (100)  NOT NULL,
    [OpportunityName]            NVARCHAR (255)  NULL,
    [Area_key]                   INT             NOT NULL,
    [Access_key]                 INT             NOT NULL,
    [SalesOrder_key]             INT             NOT NULL,
    [SugarEnum_BusinessType_key] INT             NOT NULL,
    [AddressStreetAndNo]         NVARCHAR (255)  NULL,
    [AddressPostalCode]          NVARCHAR (20)   NULL,
    [AddressStreetName]          NVARCHAR (255)  NULL,
    [AddressStreetNo]            NVARCHAR (10)   NULL,
    [AddressCity]                NVARCHAR (255)  NULL,
    [AddressCountry]             NVARCHAR (100)  NULL,
    [Latitude]                   DECIMAL (10, 6) NULL,
    [Longitude]                  DECIMAL (10, 6) NULL,
    [Fastighetsbeteckningc]      NVARCHAR (255)  NULL,
    [AcquiredAccess]             VARCHAR (7)     NOT NULL,
    [CustomerCategory_key]       INT             NOT NULL,
    CONSTRAINT [PK_Fact_d_Opportunity] PRIMARY KEY CLUSTERED ([Opportunity_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Opportunity].[NCIDX_SysModifiedUTC_Fact_d_Opportunity]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Opportunity]
    ON [Fact].[d_Opportunity]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_CustomerCategory]...';


GO
CREATE TABLE [Fact].[d_CustomerCategory] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [CustomerCategory_key]     INT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [CustomerCategory_bkey]    INT            NOT NULL,
    [CustomerCategoryCode]     NVARCHAR (250) NOT NULL,
    [CustomerCategory]         NVARCHAR (250) NULL,
    [SalesHierarchy]           NVARCHAR (100) NULL,
    CONSTRAINT [PK_Fact_d_CustomerCategory] PRIMARY KEY CLUSTERED ([CustomerCategory_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_CustomerCategory].[NCIDX_SysModifiedUTC_Fact_d_CustomerCategory]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_CustomerCategory]
    ON [Fact].[d_CustomerCategory]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[f_Planning]...';


GO
CREATE TABLE [Fact].[f_Planning] (
    [SysExecutionLog_key]    INT            NOT NULL,
    [SysDatetimeInsertedUTC] DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]  DATETIME2 (0)  NULL,
    [SysModifiedUTC]         DATETIME2 (0)  NOT NULL,
    [SysDatetimeDeletedUTC]  DATETIME2 (0)  NULL,
    [SysValidFromDateTime]   DATETIME2 (0)  NOT NULL,
    [Planning_key]           NVARCHAR (229) NOT NULL,
    [Calendar_key]           INT            NULL,
    [CustomerCategory_key]   INT            NOT NULL,
    [Scenario_bkey]          NVARCHAR (250) NULL,
    [Phase_bkey]             NVARCHAR (250) NULL,
    [PlanningPeriod]         NVARCHAR (128) NULL,
    [Amount]                 NUMERIC (38)   NULL,
    CONSTRAINT [PK_Fact_f_Planning] PRIMARY KEY CLUSTERED ([Planning_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[f_Planning].[NCIDX_SysModifiedUTC_Fact_f_Planning]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_f_Planning]
    ON [Fact].[f_Planning]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[f_Subscription]...';


GO
CREATE TABLE [Fact].[f_Subscription] (
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [Subscription_key]         INT           NOT NULL,
    [SubscriptionProduct_key]  INT           NOT NULL,
    [Access_key]               INT           NOT NULL,
    [Access_bkey]              INT           NOT NULL,
    [ServiceProvider_key]      INT           NOT NULL,
    [Calendar_key]             INT           NULL,
    [NoOfActivation]           INT           NOT NULL,
    CONSTRAINT [PK_Fact_f_Subscription] PRIMARY KEY CLUSTERED ([Subscription_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[f_Subscription].[NCIDX_SysModifiedUTC_Fact_f_Subscription]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_f_Subscription]
    ON [Fact].[f_Subscription]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[f_Penetration]...';


GO
CREATE TABLE [Fact].[f_Penetration] (
    [SysExecutionLog_key]           INT            NOT NULL,
    [SysDatetimeInsertedUTC]        DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]         DATETIME2 (0)  NULL,
    [SysModifiedUTC]                DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]      DATETIME2 (0)  NULL,
    [SysValidFromDateTime]          DATETIME2 (0)  NOT NULL,
    [SysDatetimeDeletedUTC]         DATETIME2 (0)  NULL,
    [Calendar_key]                  INT            NULL,
    [Penetration_key]               NVARCHAR (250) NOT NULL,
    [Opportunity_key]               INT            NULL,
    [Area_key]                      INT            NULL,
    [Project_key]                   INT            NULL,
    [SalesOrder_key]                INT            NOT NULL,
    [Customer_key]                  INT            NOT NULL,
    [Employee_SalesResponsible_key] INT            NOT NULL,
    [Access_key]                    INT            NOT NULL,
    [NoOfHP]                        INT            NULL,
    [NoOfHC]                        INT            NULL,
    [NoOfInstalled]                 INT            NOT NULL,
    CONSTRAINT [PK_Fact_f_Penetration] PRIMARY KEY CLUSTERED ([Penetration_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[f_Penetration].[NCIDX_SysModifiedUTC_Fact_f_Penetration]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_f_Penetration]
    ON [Fact].[f_Penetration]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
PRINT N'Creating [Fact].[d_Employee]...';


GO
CREATE TABLE [Fact].[d_Employee] (
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [Employee_key]             INT            NOT NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Employee_bkey]            NVARCHAR (100) NOT NULL,
    [EmployeeName]             NVARCHAR (150) NOT NULL,
    [Title]                    NVARCHAR (50)  NOT NULL,
    [Department]               NVARCHAR (50)  NOT NULL,
    [EmployeeStatus]           NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Fact_d_Employee] PRIMARY KEY CLUSTERED ([Employee_key] ASC) WITH (DATA_COMPRESSION = PAGE) ON [Fact_Data]
);


GO
PRINT N'Creating [Fact].[d_Employee].[NCIDX_SysModifiedUTC_Fact_d_Employee]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Fact_d_Employee]
    ON [Fact].[d_Employee]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE)
    ON [Fact_Index];


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
