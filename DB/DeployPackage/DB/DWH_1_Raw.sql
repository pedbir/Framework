/*
Deployment script for DWH_1_Raw

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DWH_1_Raw"
:setvar DefaultFilePrefix "DWH_1_Raw"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--TRUNCATE TABLE [Manual_RawTyped].[rt_ReportStructure_01]

GO

GO
PRINT N'Altering [Norm_d].[CustomerCategory]...';


GO
ALTER VIEW Norm_d.CustomerCategory
AS
SELECT  SysDatetimeDeletedUTC         = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC              = CAST(LastChgDateTime AS DATETIME2(0))
        , SysValidFromDateTime        = CAST(LastChgDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime    = CAST(EnterDateTime AS DATETIME2(0))
        , CustomerCategory_bkey       = cc.ID
		, CustomerCategoryCode		= cc.Code
        , CustomerCategory = cc.Name
        , SalesHierarchy
        , SugarEnum_BusinessType_bkey = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.BusinessType))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_AreaType_bkey     = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.AreaType))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_OrderType_bkey    = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.OrderType))) AS NVARCHAR(100)), ''), '%')
        , OpportunityCustomerType     = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.OpportunityCustomerType))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_SubsidyArea_bkey  = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.SubsidyArea))) AS NVARCHAR(100)), ''), '%')
FROM OPENQUERY(MDS, 'SELECT * FROM DWH_0_MDM.[mdm].[CustomerCategory]') cc
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
