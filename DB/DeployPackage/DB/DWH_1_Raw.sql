/*
Deployment script for DWH_1_Raw

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DWH_2_Norm "DWH_2_Norm"
:setvar DatabaseName "DWH_1_Raw"
:setvar DefaultFilePrefix "DWH_1_Raw"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------

CREATE TABLE #temp(sqlStatement nvarchar(max), rowNo int)
INSERT INTO #temp
SELECT sqlStatement = 'TRUNCATE TABLE ' + t.TABLE_CATALOG + '.[' + t.TABLE_SCHEMA + '].[' + t.TABLE_NAME + ']'
       , rowNo = ROW_NUMBER() OVER (ORDER BY t.TABLE_NAME)
FROM   INFORMATION_SCHEMA.TABLES t
WHERE t.TABLE_TYPE = 'BASE TABLE' AND (t.TABLE_SCHEMA LIKE 'Bams%' OR t.TABLE_NAME = 'rt_DimRelationer_01')

DECLARE @LastRowNo int = 1, @sqlStatement NVARCHAR(max)

WHILE (@LastRowNo IS NOT NULL)
BEGIN 
	
	SET @sqlStatement = (SELECT TOP 1 t.sqlStatement FROM #temp t WHERE t.rowNo = @LastRowNo)

	PRINT @sqlStatement
	
	EXEC (@sqlStatement)

	set @LastRowNo= (select top 1 rowNo from #temp where rowNo > @LastRowNo order by rowNo)
END

DROP TABLE #temp

*/


IF HOST_NAME() = 'dwbuildsrv01'
BEGIN 
IF (EXISTS (SELECT * FROM MDS.INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'MDM' AND  TABLE_NAME = 'SegmentLeaf'))
BEGIN    
	DROP TABLE MDS.mdm.SegmentLeaf 
END

CREATE TABLE #temptable ( [ID] int, [MUID] uniqueidentifier, [VersionName] nvarchar(50), [VersionNumber] int, [Version_ID] int, [VersionFlag] nvarchar(50), [Name] nvarchar(250), [Code] nvarchar(250), [ChangeTrackingMask] int, [SourceSystem_Code] nvarchar(250), [SourceSystem_Name] nvarchar(250), [SourceSystem_ID] int, [CategoryCode] nvarchar(100), [SegmentGolden_Code] nvarchar(250), [SegmentGolden_Name] nvarchar(250), [SegmentGolden_ID] int, [Category] nvarchar(100), [EnterDateTime] datetime2(3), [EnterUserName] nvarchar(100), [EnterVersionNumber] int, [LastChgDateTime] datetime2(3), [LastChgUserName] nvarchar(100), [LastChgVersionNumber] int, [ValidationStatus] nvarchar(250), [State] nvarchar(250) )
SELECT * 
INTO MDS.mdm.SegmentLeaf 
FROM #temptable 

DROP TABLE #temptable 


IF (EXISTS (SELECT * FROM MDS.INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'MDM' AND  TABLE_NAME = 'SegmentGolden'))
BEGIN    
	DROP TABLE MDS.mdm.SegmentGolden 
END

CREATE TABLE #temptable1 ( [ID] int, [MUID] uniqueidentifier, [VersionName] nvarchar(50), [VersionNumber] int, [Version_ID] int, [VersionFlag] nvarchar(50), [Name] nvarchar(250), [Code] nvarchar(250), [ChangeTrackingMask] int, [CategoryCode] nvarchar(100), [Category] nvarchar(100), [EnterDateTime] datetime2(3), [EnterUserName] nvarchar(100), [EnterVersionNumber] int, [LastChgDateTime] datetime2(3), [LastChgUserName] nvarchar(100), [LastChgVersionNumber] int, [ValidationStatus] nvarchar(250), [State] nvarchar(250) )
SELECT * 
INTO MDS.mdm.SegmentGolden 
FROM #temptable1

DROP TABLE #temptable1 
END

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


GO

GO
PRINT N'Update complete.';


GO
