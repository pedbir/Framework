/*
Deployment script for DWH_1_Raw

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DevelopmentFrameworkConfig "SEBOT0001-IS5\SEBOT0001IS5"
:setvar OtherServer "NDB"
:setvar DatabaseName "DWH_1_Raw"
:setvar DefaultFilePrefix "DWH_1_Raw"
:setvar DefaultDataPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "E:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Finnish_Swedish_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY SIMPLE,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--TRUNCATE TABLE [Manual_RawTyped].[rt_ReportStructure_01]
GO

GO
PRINT N'Creating [Cava]...';


GO
EXECUTE sp_addlinkedserver @server = N'Cava', @srvproduct = N'SQLServer', @provider = N'SQLNCLI11', @datasrc = N'SEBOT0001-IS5\SEBOT0001IS5';


GO
PRINT N'Creating [DW_SERVER]...';


GO
EXECUTE sp_addlinkedserver @server = N'DW_SERVER', @srvproduct = N'SQLServer', @provider = N'SQLNCLI11', @datasrc = N'Localhost';


GO
PRINT N'Creating [IFSPROD]...';


GO
EXECUTE sp_addlinkedserver @server = N'IFSPROD', @srvproduct = N'OracleOLEDB', @provider = N'OraOLEDB.Oracle', @datasrc = N'PROD';


GO
PRINT N'Creating [localhost]...';


GO
EXECUTE sp_addlinkedserver @server = N'localhost';


GO
PRINT N'Creating [NBS]...';


GO
EXECUTE sp_addlinkedserver @server = N'NBS', @srvproduct = N'SQLServer', @provider = N'SQLNCLI11', @datasrc = N'iponbs2';


GO
PRINT N'Creating [NETADMIN]...';


GO
EXECUTE sp_addlinkedserver @server = N'NETADMIN', @srvproduct = N'MySQL ODBC 5.3 ANSI Driver', @provider = N'MSDASQL', @datasrc = N'netadmin';


GO
PRINT N'Creating [SUGAR]...';


GO
EXECUTE sp_addlinkedserver @server = N'SUGAR', @srvproduct = N'MySQL ODBC 5.3 ANSI Driver', @provider = N'MSDASQL', @datasrc = N'sugar';


GO
PRINT N'Creating [Cava]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'Cava', @useself = N'FALSE', @rmtuser = N'dw_service', @rmtpassword = N'rHXnVByjQ6k7C9WH';


GO
PRINT N'Creating [DW_SERVER]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'DW_SERVER';


GO
PRINT N'Creating [IFSPROD]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'IFSPROD', @useself = N'FALSE', @rmtuser = N'ifs_reports', @rmtpassword = N'ifs1p0nly';


GO
PRINT N'Creating [NBS]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'NBS', @useself = N'FALSE', @rmtuser = N'dw_service', @rmtpassword = N'rHXnVByjQ6k7C9WH';


GO
PRINT N'Creating [NETADMIN]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'NETADMIN', @useself = N'FALSE', @rmtuser = N'bi_prod', @rmtpassword = N'NBoPh2nfJ61wZLLKdj5f';


GO
PRINT N'Creating [SUGAR]...';


GO
EXECUTE sp_addlinkedsrvlogin @rmtsrvname = N'SUGAR', @useself = N'FALSE', @rmtuser = N'dw_service', @rmtpassword = N'rHXnVByjQ6k7C9WH';


GO
PRINT N'Creating [Cava]...';


GO
CREATE SCHEMA [Cava]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Cava_RawTyped]...';


GO
CREATE SCHEMA [Cava_RawTyped]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [IFS]...';


GO
CREATE SCHEMA [IFS]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [IFS_RawTyped]...';


GO
CREATE SCHEMA [IFS_RawTyped]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [ManualData]...';


GO
CREATE SCHEMA [ManualData]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [NBS]...';


GO
CREATE SCHEMA [NBS]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [NBS_RawTyped]...';


GO
CREATE SCHEMA [NBS_RawTyped]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Netadmin]...';


GO
CREATE SCHEMA [Netadmin]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Netadmin_RawTyped]...';


GO
CREATE SCHEMA [Netadmin_RawTyped]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Norm_d]...';


GO
CREATE SCHEMA [Norm_d]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Norm_f]...';


GO
CREATE SCHEMA [Norm_f]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Sugar]...';


GO
CREATE SCHEMA [Sugar]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Sugar_RawTyped]...';


GO
CREATE SCHEMA [Sugar_RawTyped]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Telemator]...';


GO
CREATE SCHEMA [Telemator]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Cava_RawTyped].[r_ServiceStatus]...';


GO
CREATE TABLE [Cava_RawTyped].[r_ServiceStatus] (
    [ServiceStatus_key]        INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [ServiceStatus_bkey]       INT           NOT NULL,
    [Servicestatus]            NVARCHAR (50) NULL,
    [RegardAsActive]           BIT           NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_ServiceStatus] PRIMARY KEY CLUSTERED ([ServiceStatus_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_ServiceStatus].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_ServiceStatus]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_ServiceStatus]
    ON [Cava_RawTyped].[r_ServiceStatus]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Cava_RawTyped].[r_AgreementType]...';


GO
CREATE TABLE [Cava_RawTyped].[r_AgreementType] (
    [AgreementType_key]        INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [AgreementType_bkey]       INT           NOT NULL,
    [AgreementType]            NVARCHAR (50) NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_AgreementType] PRIMARY KEY CLUSTERED ([AgreementType_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_AgreementType].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_AgreementType]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_AgreementType]
    ON [Cava_RawTyped].[r_AgreementType]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Cava_RawTyped].[r_Customer]...';


GO
CREATE TABLE [Cava_RawTyped].[r_Customer] (
    [Customer_key]             INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Customer_bkey]            INT            NOT NULL,
    [FullName]                 NVARCHAR (255) NULL,
    [OrgNo]                    NVARCHAR (255) NULL,
    [SuperOfficeUser]          NVARCHAR (50)  NULL,
    [SegmentID]                INT            NULL,
    [MasterSystemID]           NVARCHAR (50)  NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_Customer] PRIMARY KEY CLUSTERED ([Customer_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_Customer].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_Customer]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_Customer]
    ON [Cava_RawTyped].[r_Customer]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Cava_RawTyped].[r_Order]...';


GO
CREATE TABLE [Cava_RawTyped].[r_Order] (
    [Order_key]                    INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]          INT            NOT NULL,
    [SysDatetimeInsertedUTC]       DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]        DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]        DATETIME2 (0)  NULL,
    [SysModifiedUTC]               DATETIME2 (0)  NOT NULL,
    [SysIsInferred]                BIT            NOT NULL,
    [SysValidFromDateTime]         DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]     DATETIME2 (0)  NULL,
    [Order_bkey]                   INT            NOT NULL,
    [CustomerID]                   INT            NULL,
    [CompanyID]                    INT            NULL,
    [TypeID]                       INT            NULL,
    [OrderNumber]                  NVARCHAR (50)  NULL,
    [NRCC]                         MONEY          NULL,
    [MRCC]                         MONEY          NULL,
    [Currency]                     NVARCHAR (3)   NULL,
    [InitialTerm]                  INT            NULL,
    [ArrivalDate]                  DATETIME       NULL,
    [InstallationReady]            DATETIME       NULL,
    [OrderEstimatedMRC]            MONEY          NULL,
    [TotalMRCofReplacedOrder]      MONEY          NULL,
    [Salesuser]                    NVARCHAR (255) NULL,
    [OrderadminID]                 INT            NULL,
    [AdditionalRenegotiatedMonths] NVARCHAR (50)  NULL,
    [ReasonID]                     INT            NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_Order] PRIMARY KEY CLUSTERED ([Order_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_Order].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_Order]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_Order]
    ON [Cava_RawTyped].[r_Order]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Cava_RawTyped].[r_OrderService]...';


GO
CREATE TABLE [Cava_RawTyped].[r_OrderService] (
    [OrderService_key]         INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [OrderService_bkey]        INT            NOT NULL,
    [OrderID]                  INT            NULL,
    [ServiceID]                INT            NULL,
    [Currency]                 NVARCHAR (3)   NULL,
    [NRCC]                     MONEY          NULL,
    [MRCC]                     MONEY          NULL,
    [InstallationReady]        DATETIME       NULL,
    [FirstInvoiceDate]         DATETIME       NULL,
    [LastInvoiceDate]          DATETIME       NULL,
    [TerminationNoticeDate]    DATETIME       NULL,
    [ReplaceNoticeDate]        DATETIME       NULL,
    [EndOfService]             DATETIME       NULL,
    [ServicestatusID]          INT            NULL,
    [SLA]                      NVARCHAR (50)  NULL,
    [Cap]                      INT            NULL,
    [UnitID]                   INT            NULL,
    [ConnectionID]             NVARCHAR (50)  NULL,
    [IsReneg]                  BIT            NULL,
    [SiteID]                   INT            NULL,
    [CustomerServiceName]      NVARCHAR (100) NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_OrderService] PRIMARY KEY CLUSTERED ([OrderService_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_OrderService].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_OrderService]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_OrderService]
    ON [Cava_RawTyped].[r_OrderService]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Cava_RawTyped].[r_Service]...';


GO
CREATE TABLE [Cava_RawTyped].[r_Service] (
    [Service_key]              INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [Service_bkey]             INT           NOT NULL,
    [Name]                     NVARCHAR (50) NULL,
    [ServiceSwe]               NVARCHAR (50) NULL,
    [ServiceEng]               NVARCHAR (50) NULL,
    CONSTRAINT [PK_Cava_RawTyped_r_Service] PRIMARY KEY CLUSTERED ([Service_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Cava_RawTyped].[r_Service].[NCIDX_SysModifiedUTC_Cava_RawTyped_r_Service]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Cava_RawTyped_r_Service]
    ON [Cava_RawTyped].[r_Service]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [IFS_RawTyped].[r_ProjectCost]...';


GO
CREATE TABLE [IFS_RawTyped].[r_ProjectCost] (
    [ProjectCost_key]          INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [ProjectCost_bkey]         NVARCHAR (250) NOT NULL,
    [ProjectID]                NVARCHAR (100) NULL,
    [ControlCategory]          NVARCHAR (100) NULL,
    [Estimated]                MONEY          NULL,
    [Baseline]                 MONEY          NULL,
    [Used]                     MONEY          NULL,
    [Áctual]                   MONEY          NULL,
    CONSTRAINT [PK_IFS_RawTyped_r_ProjectCost] PRIMARY KEY CLUSTERED ([ProjectCost_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [IFS_RawTyped].[r_ProjectCost].[NCIDX_SysModifiedUTC_IFS_RawTyped_r_ProjectCost]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_IFS_RawTyped_r_ProjectCost]
    ON [IFS_RawTyped].[r_ProjectCost]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [IFS_RawTyped].[r_Project]...';


GO
CREATE TABLE [IFS_RawTyped].[r_Project] (
    [Project_key]              INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Project_bkey]             NVARCHAR (100) NOT NULL,
    [Name]                     NVARCHAR (250) NULL,
    [ProgramID]                NVARCHAR (100) NULL,
    [Category1ID]              NVARCHAR (100) NULL,
    [Category2ID]              NVARCHAR (100) NULL,
    [ObjState]                 NVARCHAR (100) NULL,
    [PlanFinish]               DATETIME       NULL,
    [CloseDate]                DATETIME       NULL,
    [NumOfHP]                  INT            NULL,
    [NumOfHC]                  INT            NULL,
    [NumOfHCAM]                INT            NULL,
    [NumOfMDU]                 INT            NULL,
    [NumOfCORP]                INT            NULL,
    CONSTRAINT [PK_IFS_RawTyped_r_Project] PRIMARY KEY CLUSTERED ([Project_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [IFS_RawTyped].[r_Project].[NCIDX_SysModifiedUTC_IFS_RawTyped_r_Project]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_IFS_RawTyped_r_Project]
    ON [IFS_RawTyped].[r_Project]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [ManualData].[CustomerCategory]...';


GO
CREATE TABLE [ManualData].[CustomerCategory] (
    [CustomerTypeCategoryID]      INT            IDENTITY (1, 1) NOT NULL,
    [CustomerTypeCategory]        NVARCHAR (100) NULL,
    [CustomerTypeCategoryDetail]  NVARCHAR (100) NULL,
    [SugarEnum_BusinessType_bkey] NVARCHAR (500) NULL,
    [OpportunityCustomerType]     NVARCHAR (250) NULL,
    [SugarEnum_AreaType_bkey]     NVARCHAR (250) NULL,
    [SugarEnum_OrderType_bkey]    NVARCHAR (250) NULL,
    [SugarEnum_SubsidyArea_bkey]  NVARCHAR (250) NULL,
    CONSTRAINT [PK_CustomerCategory] PRIMARY KEY CLUSTERED ([CustomerTypeCategoryID] ASC)
);


GO
PRINT N'Creating [NBS_RawTyped].[r_NetadminArticle]...';


GO
CREATE TABLE [NBS_RawTyped].[r_NetadminArticle] (
    [NetadminArticle_key]      INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [NetadminArticle_bkey]     NVARCHAR (50) NOT NULL,
    [Service]                  NVARCHAR (50) NULL,
    [ServiceType]              NVARCHAR (50) NULL,
    [MonthlyPrice]             MONEY         NULL,
    [StartPrice]               MONEY         NULL,
    [NoBill]                   INT           NULL,
    CONSTRAINT [PK_NBS_RawTyped_r_NetadminArticle] PRIMARY KEY CLUSTERED ([NetadminArticle_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [NBS_RawTyped].[r_NetadminArticle].[NCIDX_SysModifiedUTC_NBS_RawTyped_r_NetadminArticle]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_NBS_RawTyped_r_NetadminArticle]
    ON [NBS_RawTyped].[r_NetadminArticle]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Abonnemang]...';


GO
CREATE TABLE [Netadmin_RawTyped].[r_Abonnemang] (
    [Abonnemang_key]           INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [Abonnemang_bkey]          INT           NOT NULL,
    [abostartdat]              DATE          NULL,
    [aboinkopldat]             DATE          NULL,
    [aboadressdbid]            INT           NULL,
    [abotmpid]                 INT           NULL,
    [aboartnr]                 NVARCHAR (50) NULL,
    [abostartartnr]            NVARCHAR (50) NULL,
    [aboisp]                   INT           NULL,
    [aboansvarig]              NVARCHAR (50) NULL,
    CONSTRAINT [PK_Netadmin_RawTyped_r_Abonnemang] PRIMARY KEY CLUSTERED ([Abonnemang_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Abonnemang].[NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Abonnemang]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Abonnemang]
    ON [Netadmin_RawTyped].[r_Abonnemang]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Adress]...';


GO
CREATE TABLE [Netadmin_RawTyped].[r_Adress] (
    [Adress_key]               INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Adress_bkey]              INT            NOT NULL,
    [adrkomid]                 INT            NULL,
    [adrgatid]                 INT            NULL,
    [adrnrid]                  INT            NULL,
    [adrupgid]                 INT            NULL,
    [adrpostid]                INT            NULL,
    [adrortid]                 INT            NULL,
    [ipo_installed_date]       DATE           NULL,
    [adrkodid1]                INT            NULL,
    [adrkodid2]                INT            NULL,
    [adrkodid3]                INT            NULL,
    [adrkodid4]                INT            NULL,
    [adrkodid5]                INT            NULL,
    [adridentitet]             NVARCHAR (100) NULL,
    CONSTRAINT [PK_Netadmin_RawTyped_r_Adress] PRIMARY KEY CLUSTERED ([Adress_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Adress].[NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Adress]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Adress]
    ON [Netadmin_RawTyped].[r_Adress]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_AdressKod]...';


GO
CREATE TABLE [Netadmin_RawTyped].[r_AdressKod] (
    [AdressKod_key]            INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [AdressKod_bkey]           INT            NOT NULL,
    [kodnamn]                  NVARCHAR (100) NULL,
    CONSTRAINT [PK_Netadmin_RawTyped_r_AdressKod] PRIMARY KEY CLUSTERED ([AdressKod_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_AdressKod].[NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_AdressKod]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_AdressKod]
    ON [Netadmin_RawTyped].[r_AdressKod]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Isp]...';


GO
CREATE TABLE [Netadmin_RawTyped].[r_Isp] (
    [Isp_key]                  INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [Isp_bkey]                 INT           NOT NULL,
    [ispnamn]                  NVARCHAR (50) NULL,
    CONSTRAINT [PK_Netadmin_RawTyped_r_Isp] PRIMARY KEY CLUSTERED ([Isp_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_Isp].[NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Isp]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_Isp]
    ON [Netadmin_RawTyped].[r_Isp]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_PreAbonnemang]...';


GO
CREATE TABLE [Netadmin_RawTyped].[r_PreAbonnemang] (
    [PreAbonnemang_key]        INT           IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT           NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0) NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0) NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0) NULL,
    [SysModifiedUTC]           DATETIME2 (0) NOT NULL,
    [SysIsInferred]            BIT           NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0) NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0) NULL,
    [PreAbonnemang_bkey]       INT           NOT NULL,
    [Preinkopldat]             DATE          NULL,
    [Preurkopldat]             DATE          NULL,
    [Preadrid]                 INT           NULL,
    [Pretmpid]                 INT           NULL,
    [Preartnr]                 NVARCHAR (50) NULL,
    [Prestartartnr]            NVARCHAR (50) NULL,
    [aboisp]                   INT           NULL,
    [abostartdat]              DATE          NULL,
    [aboansvarig]              NVARCHAR (50) NULL,
    CONSTRAINT [PK_Netadmin_RawTyped_r_PreAbonnemang] PRIMARY KEY CLUSTERED ([PreAbonnemang_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Netadmin_RawTyped].[r_PreAbonnemang].[NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_PreAbonnemang]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Netadmin_RawTyped_r_PreAbonnemang]
    ON [Netadmin_RawTyped].[r_PreAbonnemang]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_User]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_User] (
    [User_key]                 INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [User_bkey]                NVARCHAR (100) NOT NULL,
    [Username]                 NVARCHAR (100) NULL,
    [Deleted]                  INT            NULL,
    [FirstName]                NVARCHAR (30)  NULL,
    [LastName]                 NVARCHAR (30)  NULL,
    [Title]                    NVARCHAR (50)  NULL,
    [Department]               NVARCHAR (50)  NULL,
    [EmployeeStatus]           NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_User] PRIMARY KEY CLUSTERED ([User_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_User].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_User]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_User]
    ON [Sugar_RawTyped].[r_User]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Affarsmojlighet]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Affarsmojlighet] (
    [Affarsmojlighet_key]      INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Affarsmojlighet_bkey]     NVARCHAR (100) NOT NULL,
    [Name]                     NVARCHAR (255) NULL,
    [Deleted]                  INT            NULL,
    [OrdernummerCavaC]         NVARCHAR (255) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Affarsmojlighet] PRIMARY KEY CLUSTERED ([Affarsmojlighet_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Affarsmojlighet].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Affarsmojlighet]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Affarsmojlighet]
    ON [Sugar_RawTyped].[r_Affarsmojlighet]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Bestallning]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Bestallning] (
    [SysExecutionLog_key]                        INT            NOT NULL,
    [SysDatetimeInsertedUTC]                     DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]                      DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]                      DATETIME2 (0)  NULL,
    [SysModifiedUTC]                             DATETIME2 (0)  NOT NULL,
    [SysValidFromDateTime]                       DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]                   DATETIME2 (0)  NULL,
    [Bestallning_bkey]                           NVARCHAR (100) NOT NULL,
    [Name]                                       NVARCHAR (255) NULL,
    [Deleted]                                    INT            NULL,
    [BillingAddressStreet]                       NVARCHAR (150) NULL,
    [BllingAddressPostalcode]                    NVARCHAR (20)  NULL,
    [BillingAddressCity]                         NVARCHAR (100) NULL,
    [StatusLeveransC]                            NVARCHAR (100) NULL,
    [Statusfaktureringc]                         NVARCHAR (100) NULL,
    [Bestallningstypc]                           NVARCHAR (100) NULL,
    [Anslutningstypc]                            NVARCHAR (100) NULL,
    [Kallabestallningc]                          NVARCHAR (100) NULL,
    [Anslutningsavgiftc]                         MONEY          NULL,
    [Rotavdragc]                                 MONEY          NULL,
    [Rutavdragc]                                 MONEY          NULL,
    [Kompensationc]                              MONEY          NULL,
    [Extrakostnadc]                              MONEY          NULL,
    [Planeradkundinstallationc]                  DATETIME2 (7)  NULL,
    [Bokadkundinstallationc]                     DATETIME2 (7)  NULL,
    [Tomtschaktutforddatumc]                     DATE           NULL,
    [Installationc]                              DATE           NULL,
    [Tjanstebundlingc]                           NVARCHAR (100) NULL,
    [Prisjusteringbundlingc]                     MONEY          NULL,
    [Tjanstebundlingnamnc]                       NVARCHAR (255) NULL,
    [Netadmintjanstskapaddatumc]                 DATE           NULL,
    [Installationsdatumnetadminc]                DATE           NULL,
    [Kampanj6maninternetc]                       NVARCHAR (20)  NULL,
    [Fornamnc]                                   NVARCHAR (255) NULL,
    [Efternamnc]                                 NVARCHAR (255) NULL,
    [Epostadressc]                               NVARCHAR (255) NULL,
    [Mobiltelc]                                  NVARCHAR (255) NULL,
    [Hemtelc]                                    NVARCHAR (255) NULL,
    [Personnummerc]                              NVARCHAR (255) NULL,
    [Orgnummerc]                                 NVARCHAR (255) NULL,
    [Ipmojligheteripbestallningipmojligheterida] NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Bestallning] PRIMARY KEY CLUSTERED ([Bestallning_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Bestallning].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Bestallning]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Bestallning]
    ON [Sugar_RawTyped].[r_Bestallning]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Contact]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Contact] (
    [Contact_key]              INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Contact_bkey]             NVARCHAR (100) NOT NULL,
    [deleted]                  INT            NULL,
    [FirstName]                NVARCHAR (100) NULL,
    [LastName]                 NVARCHAR (100) NULL,
    [Title]                    NVARCHAR (100) NULL,
    [ContactDescription]       NVARCHAR (500) NULL,
    [AssignedUserId]           NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Contact] PRIMARY KEY CLUSTERED ([Contact_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Contact].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Contact]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Contact]
    ON [Sugar_RawTyped].[r_Contact]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Geografi]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Geografi] (
    [Geografi_key]             INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Geografi_bkey]            NVARCHAR (100) NOT NULL,
    [Name]                     NVARCHAR (255) NULL,
    [Deleted]                  INT            NULL,
    [Kommunc]                  NVARCHAR (100) NULL,
    [Lanc]                     NVARCHAR (100) NULL,
    [Regionc]                  NVARCHAR (100) NULL,
    [Stadc]                    NVARCHAR (255) NULL,
    [Stadsnatc]                NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Geografi] PRIMARY KEY CLUSTERED ([Geografi_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Geografi].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Geografi]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Geografi]
    ON [Sugar_RawTyped].[r_Geografi]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Leveransobjekt]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Leveransobjekt] (
    [Leveransobjekt_key]                             INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]                            INT            NOT NULL,
    [SysDatetimeInsertedUTC]                         DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]                          DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]                          DATETIME2 (0)  NULL,
    [SysModifiedUTC]                                 DATETIME2 (0)  NOT NULL,
    [SysIsInferred]                                  BIT            NOT NULL,
    [SysValidFromDateTime]                           DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]                       DATETIME2 (0)  NULL,
    [Leveransobjekt_bkey]                            NVARCHAR (100) NOT NULL,
    [Name]                                           NVARCHAR (255) NULL,
    [Deleted]                                        INT            NULL,
    [Fastighetsbeteckningc]                          NVARCHAR (255) NULL,
    [Byggnationsstatusc]                             NVARCHAR (100) NULL,
    [Iikbeslutc]                                     NVARCHAR (100) NULL,
    [Stadsnatc]                                      NVARCHAR (100) NULL,
    [Kommunc]                                        NVARCHAR (100) NULL,
    [Regionc]                                        NVARCHAR (100) NULL,
    [Typavortc]                                      NVARCHAR (100) NULL,
    [Planeradbyggstartc]                             DATE           NULL,
    [Planeradbyggavslutc]                            DATE           NULL,
    [Planeradstartkundinstallc]                      DATE           NULL,
    [Projektidifsc]                                  NVARCHAR (255) NULL,
    [Entreprenorddc]                                 NVARCHAR (100) NULL,
    [Ansvarigsaljorganisationc]                      NVARCHAR (100) NULL,
    [Ansvarigbyggorganisationc]                      NVARCHAR (100) NULL,
    [Affarstypc]                                     NVARCHAR (255) NULL,
    [Klarrapporteradcavac]                           NVARCHAR (100) NULL,
    [Ipgeografiipleveransobjektipgeografiida]        NVARCHAR (100) NULL,
    [Opportunitiesipleveransobjekt1opportunitiesida] NVARCHAR (100) NULL,
    [Contactsipleveransobjekt2contactsida]           NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Leveransobjekt] PRIMARY KEY CLUSTERED ([Leveransobjekt_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Leveransobjekt].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Leveransobjekt]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Leveransobjekt]
    ON [Sugar_RawTyped].[r_Leveransobjekt]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Leveranspunkt]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Leveranspunkt] (
    [Leveranspunkt_key]                                    INT             IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]                                  INT             NOT NULL,
    [SysDatetimeInsertedUTC]                               DATETIME2 (0)   NOT NULL,
    [SysDatetimeUpdatedUTC]                                DATETIME2 (0)   NULL,
    [SysDatetimeDeletedUTC]                                DATETIME2 (0)   NULL,
    [SysModifiedUTC]                                       DATETIME2 (0)   NOT NULL,
    [SysIsInferred]                                        BIT             NOT NULL,
    [SysValidFromDateTime]                                 DATETIME2 (0)   NOT NULL,
    [SysSrcGenerationDateTime]                             DATETIME2 (0)   NULL,
    [Leveranspunkt_bkey]                                   NVARCHAR (100)  NOT NULL,
    [Name]                                                 NVARCHAR (255)  NULL,
    [Deleted]                                              INT             NULL,
    [Netadminaddressidc]                                   NVARCHAR (255)  NULL,
    [Relevansc]                                            NVARCHAR (100)  NULL,
    [Migreradc]                                            NVARCHAR (100)  NULL,
    [Tjanstetypc]                                          NVARCHAR (100)  NULL,
    [Installationsdatumnetadminc]                          DATE            NULL,
    [Latitudec]                                            DECIMAL (10, 6) NULL,
    [Longitudec]                                           DECIMAL (10, 6) NULL,
    [Adressmasteridc]                                      INT             NULL,
    [Kampanj6maninternetc]                                 NVARCHAR (100)  NULL,
    [Sexmangratiskampanjtillc]                             DATE            NULL,
    [Bostadsnatfinnsc]                                     NVARCHAR (100)  NULL,
    [Shippingaddressstreetc]                               NVARCHAR (255)  NULL,
    [Shippingaddresspostalcodec]                           NVARCHAR (20)   NULL,
    [Shippingaddressstreetnamec]                           NVARCHAR (255)  NULL,
    [Shippingaddressstreetnoc]                             NVARCHAR (20)   NULL,
    [Shippingaddressentrancec]                             NVARCHAR (20)   NULL,
    [Shippingaddressapartnumberc]                          NVARCHAR (20)   NULL,
    [Shippingaddressaltapartnoc]                           NVARCHAR (20)   NULL,
    [Shippingaddresscityc]                                 NVARCHAR (100)  NULL,
    [Shippingaddresscountryc]                              NVARCHAR (100)  NULL,
    [Fastighetsbeteckningc]                                NVARCHAR (255)  NULL,
    [Aktivtjanstc]                                         NVARCHAR (100)  NULL,
    [Gruppanslutningc]                                     NVARCHAR (255)  NULL,
    [Ipleveransobjektipleveranspunkteripleveransobjektida] NVARCHAR (100)  NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Leveranspunkt] PRIMARY KEY CLUSTERED ([Leveranspunkt_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Leveranspunkt].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Leveranspunkt]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Leveranspunkt]
    ON [Sugar_RawTyped].[r_Leveranspunkt]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Mojlighet]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Mojlighet] (
    [SysExecutionLog_key]              INT             NOT NULL,
    [SysDatetimeInsertedUTC]           DATETIME2 (0)   NOT NULL,
    [SysDatetimeUpdatedUTC]            DATETIME2 (0)   NULL,
    [SysDatetimeDeletedUTC]            DATETIME2 (0)   NULL,
    [SysModifiedUTC]                   DATETIME2 (0)   NOT NULL,
    [SysValidFromDateTime]             DATETIME2 (0)   NOT NULL,
    [SysSrcGenerationDateTime]         DATETIME2 (0)   NULL,
    [Mojlighet_bkey]                   NVARCHAR (100)  NOT NULL,
    [Name]                             NVARCHAR (255)  NULL,
    [Deleted]                          INT             NULL,
    [Shippingaddresspostalcode]        NVARCHAR (20)   NULL,
    [Kundtypc]                         NVARCHAR (100)  NULL,
    [Netadminaddressidc]               INT             NULL,
    [Relevansc]                        NVARCHAR (100)  NULL,
    [Migreradc]                        NVARCHAR (100)  NULL,
    [Tjanstetypc]                      NVARCHAR (100)  NULL,
    [Installationsdatumnetadminc]      DATE            NULL,
    [Latitudec]                        DECIMAL (10, 6) NULL,
    [Longitudec]                       DECIMAL (10, 6) NULL,
    [Adressmasteridc]                  INT             NULL,
    [Kampanj6maninternetc]             NVARCHAR (100)  NULL,
    [Sexmangratiskampanjtillc]         DATE            NULL,
    [Shippingaddressstreetc]           NVARCHAR (255)  NULL,
    [Shippingaddressstreetnamec]       NVARCHAR (255)  NULL,
    [Shippingaddressstreetnoc]         NVARCHAR (10)   NULL,
    [Shippingaddressentrancec]         NVARCHAR (10)   NULL,
    [Shippingaddressapartnumberc]      NVARCHAR (10)   NULL,
    [Shippingaddressaltapartnoc]       NVARCHAR (20)   NULL,
    [Shippingaddresscityc]             NVARCHAR (255)  NULL,
    [Shippingaddresscountryc]          NVARCHAR (100)  NULL,
    [Fastighetsbeteckningc]            NVARCHAR (255)  NULL,
    [Aktivtjanstc]                     NVARCHAR (100)  NULL,
    [Forvarvadhpc]                     NVARCHAR (100)  NULL,
    [Ipomradeipmojligheteripomradeida] NVARCHAR (100)  NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Mojlighet] PRIMARY KEY CLUSTERED ([Mojlighet_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Mojlighet].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Mojlighet]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Mojlighet]
    ON [Sugar_RawTyped].[r_Mojlighet]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Omrade]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Omrade] (
    [Omrade_key]                       INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]              INT            NOT NULL,
    [SysDatetimeInsertedUTC]           DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]            DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]            DATETIME2 (0)  NULL,
    [SysModifiedUTC]                   DATETIME2 (0)  NOT NULL,
    [SysIsInferred]                    BIT            NOT NULL,
    [SysValidFromDateTime]             DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime]         DATETIME2 (0)  NULL,
    [Omrade_bkey]                      NVARCHAR (100) NOT NULL,
    [Name]                             NVARCHAR (255) NULL,
    [Deleted]                          INT            NULL,
    [Byggnationsstatusc]               NVARCHAR (100) NULL,
    [Forsaljningsstatusc]              NVARCHAR (100) NULL,
    [Statusupphandlingc]               NVARCHAR (100) NULL,
    [Iikbeslutc]                       NVARCHAR (100) NULL,
    [Omraderegionc]                    NVARCHAR (100) NULL,
    [Stadsnatddc]                      NVARCHAR (100) NULL,
    [Kommunddc]                        NVARCHAR (100) NULL,
    [Typavortc]                        NVARCHAR (100) NULL,
    [Forsaljningpaborjadc]             DATE           NULL,
    [Efterkampanjpaborjadc]            DATE           NULL,
    [Saljstopputesaljc]                DATE           NULL,
    [Planeradbyggstartc]               DATE           NULL,
    [Planeratklardatumc]               DATE           NULL,
    [Planeradinstallationstartc]       DATE           NULL,
    [Planeratavslutkundinstallc]       DATE           NULL,
    [Dateoverlamnadtillbyggc]          DATE           NULL,
    [Projektnummerifsc]                NVARCHAR (255) NULL,
    [Entreprenorddc]                   NVARCHAR (100) NULL,
    [Ansvarigsaljorganisationc]        NVARCHAR (100) NULL,
    [Ansvarigbyggorganisationc]        NVARCHAR (100) NULL,
    [Useridc]                          NVARCHAR (100) NULL,
    [Userid2c]                         NVARCHAR (100) NULL,
    [Userid3c]                         NVARCHAR (100) NULL,
    [Bidragsomradec]                   NVARCHAR (100) NULL,
    [Natdesignklarc]                   DATE           NULL,
    [Planeratleveransnodlankc]         DATE           NULL,
    [Nodlankdriftsattc]                DATE           NULL,
    [Projekteringddc]                  NVARCHAR (100) NULL,
    [Kommunavtalklarac]                DATE           NULL,
    [Trvbehovsc]                       NVARCHAR (100) NULL,
    [Planeratklardatumtrvc]            DATE           NULL,
    [Antaltrvbehovsc]                  INT            NULL,
    [Antaltrvklarac]                   INT            NULL,
    [Tillstandtrvklarac]               DATE           NULL,
    [Tillstandtrvklaratextc]           NVARCHAR (255) NULL,
    [Allatillstandtrvinskickadec]      DATE           NULL,
    [Antaltrvinskickadec]              INT            NULL,
    [Tillstandlansstyrelsenc]          NVARCHAR (100) NULL,
    [Lansstyrelseninskickatc]          DATE           NULL,
    [Bygglovklarc]                     DATE           NULL,
    [Bygglovklartextc]                 NVARCHAR (255) NULL,
    [Allabygglovinskickadec]           DATE           NULL,
    [Slutdokumentationklarc]           DATE           NULL,
    [Konkurrentc]                      NVARCHAR (255) NULL,
    [Iikgodkantdatumc]                 DATE           NULL,
    [Antalutfordaschaktmeterc]         INT            NULL,
    [Antalplaneradeschaktmeterc]       INT            NULL,
    [Antalfibreradefosarc]             INT            NULL,
    [Planeratantalfosarc]              INT            NULL,
    [Antalmarkavtalbehovsc]            INT            NULL,
    [Ipgeografiipomrade1ipgeografiida] NVARCHAR (100) NULL,
    [UsersIpOmrade1UsersIda]           NVARCHAR (100) NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Omrade] PRIMARY KEY CLUSTERED ([Omrade_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Omrade].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Omrade]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Omrade]
    ON [Sugar_RawTyped].[r_Omrade]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Enum]...';


GO
CREATE TABLE [Sugar_RawTyped].[r_Enum] (
    [Enum_key]                 INT            IDENTITY (1, 1) NOT NULL,
    [SysExecutionLog_key]      INT            NOT NULL,
    [SysDatetimeInsertedUTC]   DATETIME2 (0)  NOT NULL,
    [SysDatetimeUpdatedUTC]    DATETIME2 (0)  NULL,
    [SysDatetimeDeletedUTC]    DATETIME2 (0)  NULL,
    [SysModifiedUTC]           DATETIME2 (0)  NOT NULL,
    [SysIsInferred]            BIT            NOT NULL,
    [SysValidFromDateTime]     DATETIME2 (0)  NOT NULL,
    [SysSrcGenerationDateTime] DATETIME2 (0)  NULL,
    [Enum_bkey]                NVARCHAR (100) NOT NULL,
    [ModuleName]               NVARCHAR (250) NULL,
    [ModuleField]              NVARCHAR (250) NULL,
    [FieldKey]                 NVARCHAR (250) NULL,
    [FieldValue]               NVARCHAR (250) NULL,
    [Deleted]                  INT            NULL,
    CONSTRAINT [PK_Sugar_RawTyped_r_Enum] PRIMARY KEY CLUSTERED ([Enum_bkey] ASC, [SysValidFromDateTime] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Enum].[NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Enum]...';


GO
CREATE NONCLUSTERED INDEX [NCIDX_SysModifiedUTC_Sugar_RawTyped_r_Enum]
    ON [Sugar_RawTyped].[r_Enum]([SysModifiedUTC] ASC) WITH (DATA_COMPRESSION = PAGE);


GO
PRINT N'Creating [Sugar_RawTyped].[r_Enum].[IX_Enum]...';


GO
CREATE NONCLUSTERED INDEX [IX_Enum]
    ON [Sugar_RawTyped].[r_Enum]([ModuleName] ASC, [ModuleField] ASC, [FieldKey] ASC, [Deleted] ASC)
    INCLUDE([FieldValue]);


GO
PRINT N'Creating [dbo].[fn_Calendar]...';


GO


CREATE FUNCTION [dbo].[fn_Calendar] 
(	@p_StartDate DateTime,
	@p_EndDate DateTime 

)
RETURNS TABLE 
AS
RETURN 
(
	


With Base As 
( 
      Select 1 as n 
      Union All 
      Select n+1 From Base Where n < Ceiling(SQRT(Datediff(day,@p_StartDate,@p_EndDate) + 1)) 
), 
Expand As 
( 
      Select 1 as C 
      From Base as B1, Base as B2 
), 
Nums As 
( 
      Select Row_Number() OVER(ORDER BY C) As n 
      From Expand 
) , 
CalcDate AS
(
	select Dateadd(day,n-1,@p_StartDate) as Datum_nk
	from Nums
	Where n<=Datediff(day,@p_StartDate,@p_EndDate) + 1
)
 
--Main Query to generate Calendar table 
SELECT
	Datum_nk as [Calendar_bkey]  
	,datepart(yyyy,Datum_nk) as CalendarYear
	,cast(datepart(yyyy,Datum_nk) as varchar(4)) + '-' + RIGHT(convert(varchar(6), Datum_nk, 112), 2) as YearMonth
	,cast(datepart(yyyy,Datum_nk) as varchar(4)) + '-W' + cast(datepart(wk,Datum_nk) as varchar(2)) as YearWeek
	,cast(datepart(yyyy,Datum_nk) as varchar(4)) + '-Q' + cast(datepart(qq, Datum_nk) as varchar(2)) as [YearQuarter]
	,datepart(qq, Datum_nk) as CalendarQuarter
	,datepart(mm,Datum_nk) as MonthofYear
	,cast(UPPER(LEFT(DATENAME(m,Datum_nk),1)) + SUBSTRING(DATENAME(m,Datum_nk),2,LEN(Datum_nk)) as varchar(10)) as [MonthName]
	,datepart(wk,Datum_nk) as [WeekOfYear]
	,datepart(dw,Datum_nk) as DayofWeek
	,CAST(UPPER(LEFT(DATENAME(dw,Datum_nk),1)) + SUBSTRING(DATENAME(dw,Datum_nk),2,LEN(Datum_nk)) as char(10))  as [DayName]
	,datepart(day,Datum_nk) as DayofMonth
From CalcDate  
 
 
 
)
GO
PRINT N'Creating [dbo].[tvf_split]...';


GO
CREATE FUNCTION tvf_split
(
    @Text VARCHAR(MAX),
    @Separator CHAR(1)
)
RETURNS @Values TABLE (SplitValue NVARCHAR(100))
AS
BEGIN

    DECLARE @X XML

    SELECT @X = CONVERT(XML, ' <root> <s>' + REPLACE(@Text, @Separator, '</s> <s>') + '</s>   </root> ')

    INSERT @Values
    (
        SplitValue
    )
    SELECT Value = T.c.value('.', 'varchar(100)')
    FROM @X.nodes('/root/s')T(c)


    RETURN
END
GO
PRINT N'Creating [Cava].[AgreementType]...';


GO
CREATE VIEW [Cava].[AgreementType]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , AgreementType_bkey = CONVERT(INT, TypeID)
	  , AgreementType = CONVERT(NVARCHAR(50), AgreementType)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	TypeID
	, AgreementType
FROM [NDB].[dbo].[Agreement_Type]
') oq;
GO
PRINT N'Creating [Cava].[Customer]...';


GO
CREATE VIEW [Cava].[Customer]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(CreatedDate AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , Customer_bkey = CONVERT(INT, CustomerID)
	  , FullName = CONVERT(NVARCHAR(255), Full_name)
	  , OrgNo = CONVERT(NVARCHAR(255), [Org no])
	  , SuperOfficeUser = CONVERT(NVARCHAR(50), SuperOfficeUser)
	  , SegmentID = CONVERT(INT, SegmentID)
	  , MasterSystemID = CONVERT(NVARCHAR(50), MasterSystemID)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	CustomerID
	, CreatedDate
	, Full_name
	, [Org no]
	, SuperOfficeUser
	, SegmentID
	, MasterSystemID
FROM [NDB].[dbo].[Customer]
') oq;
GO
PRINT N'Creating [Cava].[Order]...';


GO
CREATE VIEW [Cava].[Order]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(Created AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , Order_bkey = CONVERT(INT, OrderID)
	  , CustomerID = CONVERT(INT, CustomerID)
	  , CompanyID = CONVERT(INT, CompanyID)
	  , TypeID = CONVERT(INT, TypeID)
	  , OrderNumber = CONVERT(NVARCHAR(50), Order_number)
	  , NRCC = CONVERT(MONEY, NRCC)
	  , MRCC = CONVERT(MONEY, MRCC)
	  , Currency = CONVERT(NVARCHAR(3), Currency)
	  , InitialTerm = CONVERT(INT, [Initial Term])
	  , ArrivalDate = CONVERT(DATETIME, [Arrival date])
	  , InstallationReady = CONVERT(DATETIME, [Installation ready])
	  , OrderEstimatedMRC = CONVERT(MONEY, OrderEstimatedMRC)
	  , TotalMRCofReplacedOrder = CONVERT(MONEY, TotalMRCofReplacedOrder)
	  , Salesuser = CONVERT(NVARCHAR(255), Salesuser)
	  , OrderadminID = CONVERT(INT, OrderadminID)
	  , AdditionalRenegotiatedMonths = CONVERT(NVARCHAR(50), AdditionalRenegotiatedMonths)
	  , ReasonID = CONVERT(INT, ReasonID)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	OrderID
	, Created
	, CustomerID
	, CompanyID
	, TypeID
	, Order_number
	, NRCC
	, MRCC
	, Currency
	, [Initial Term]
	, [Arrival date]
	, [Installation ready]
	, OrderEstimatedMRC
	, TotalMRCofReplacedOrder
	, Salesuser
	, OrderadminID
	, AdditionalRenegotiatedMonths
	, ReasonID
FROM [NDB].[dbo].[OTABLE]
') oq;
GO
PRINT N'Creating [Cava].[OrderService]...';


GO
CREATE VIEW [Cava].[OrderService]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(Created AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , OrderService_bkey = CONVERT(INT, OrderServiceID)
	  , OrderID = CONVERT(INT, OrderID)
	  , ServiceID = CONVERT(INT, ServiceID)
	  , Currency = CONVERT(NVARCHAR(3), Currency)
	  , NRCC = CONVERT(MONEY, NRCC)
	  , MRCC = CONVERT(MONEY, MRCC)
	  , InstallationReady = CONVERT(DATETIME, [Installation ready])
	  , FirstInvoiceDate = CONVERT(DATETIME, [1st invoice date])
	  , LastInvoiceDate = CONVERT(DATETIME, [Last Invoice date])
	  , TerminationNoticeDate = CONVERT(DATETIME, TerminationNoticeDate)
	  , ReplaceNoticeDate = CONVERT(DATETIME, ReplaceNoticeDate)
	  , EndOfService = CONVERT(DATETIME, EndOfService)
	  , ServicestatusID = CONVERT(INT, Servicestatus_ID)
	  , SLA = CONVERT(NVARCHAR(50), SLA)
	  , Cap = CONVERT(INT, Cap)
	  , UnitID = CONVERT(INT, UnitID)
	  , ConnectionID = CONVERT(NVARCHAR(50), ConnectionID)
	  , IsReneg = CONVERT(BIT, isReneg)
	  , SiteID = CONVERT(INT, SiteID)
	  , CustomerServiceName = CONVERT(NVARCHAR(100), CustomerServiceName)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	OrderServiceID
	, Created
	, OrderID
	, ServiceID
	, Currency
	, NRCC
	, MRCC
	, [Installation ready]
	, [1st invoice date]
	, [Last Invoice date]
	, TerminationNoticeDate
	, ReplaceNoticeDate
	, EndOfService
	, Servicestatus_ID
	, SLA
	, Cap
	, UnitID
	, ConnectionID
	, isReneg
	, SiteID
	, CustomerServiceName
FROM [NDB].[dbo].[OrderService]
') oq;
GO
PRINT N'Creating [Cava].[Service]...';


GO
CREATE VIEW [Cava].[Service]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , Service_bkey = CONVERT(INT, ServiceID)
	  , Name = CONVERT(NVARCHAR(50), Name)
	  , ServiceSwe = CONVERT(NVARCHAR(50), Service_swe)
	  , ServiceEng = CONVERT(NVARCHAR(50), Service_eng)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	ServiceID
	, Name
	, Service_swe
	, Service_eng
FROM [NDB].[dbo].[Service]
') oq;
GO
PRINT N'Creating [Cava].[ServiceStatus]...';


GO
CREATE VIEW [Cava].[ServiceStatus]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , ServiceStatus_bkey = CONVERT(INT, Servicestatus_ID)
	  , Servicestatus = CONVERT(NVARCHAR(50), Servicestatus)
	  , RegardAsActive = CONVERT(BIT, RegardAsActive)
--select *
FROM    OPENQUERY(Cava, '
SELECT 
	Servicestatus_ID
	, Servicestatus
	, RegardAsActive
FROM [NDB].[dbo].[Servicestatus]
') oq;
GO
PRINT N'Creating [Cava_RawTyped].[vr_AgreementType]...';


GO
CREATE VIEW Cava_RawTyped.vr_AgreementType AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY AgreementType_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_AgreementType)
							SELECT  t1.AgreementType_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.AgreementType_bkey, t2.AgreementType, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.AgreementType_bkey = t1.AgreementType_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Cava_RawTyped].[vr_Customer]...';


GO
CREATE VIEW Cava_RawTyped.vr_Customer AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Customer_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_Customer)
							SELECT  t1.Customer_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Customer_bkey, t2.FullName, t2.OrgNo, t2.SuperOfficeUser, t2.SegmentID, t2.MasterSystemID, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Customer_bkey = t1.Customer_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Cava_RawTyped].[vr_Order]...';


GO
CREATE VIEW Cava_RawTyped.vr_Order AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Order_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_Order)
							SELECT  t1.Order_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Order_bkey, t2.CustomerID, t2.CompanyID, t2.TypeID, t2.OrderNumber, t2.NRCC, t2.MRCC, t2.Currency, t2.InitialTerm, t2.ArrivalDate, t2.InstallationReady, t2.OrderEstimatedMRC, t2.TotalMRCofReplacedOrder, t2.Salesuser, t2.OrderadminID, t2.AdditionalRenegotiatedMonths, t2.ReasonID, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Order_bkey = t1.Order_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Cava_RawTyped].[vr_OrderService]...';


GO
CREATE VIEW Cava_RawTyped.vr_OrderService AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY OrderService_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_OrderService)
							SELECT  t1.OrderService_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.OrderService_bkey, t2.OrderID, t2.ServiceID, t2.Currency, t2.NRCC, t2.MRCC, t2.InstallationReady, t2.FirstInvoiceDate, t2.LastInvoiceDate, t2.TerminationNoticeDate, t2.ReplaceNoticeDate, t2.EndOfService, t2.ServicestatusID, t2.SLA, t2.Cap, t2.UnitID, t2.ConnectionID, t2.IsReneg, t2.SiteID, t2.CustomerServiceName, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.OrderService_bkey = t1.OrderService_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Cava_RawTyped].[vr_Service]...';


GO
CREATE VIEW Cava_RawTyped.vr_Service AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Service_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_Service)
							SELECT  t1.Service_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Service_bkey, t2.Name, t2.ServiceSwe, t2.ServiceEng, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Service_bkey = t1.Service_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Cava_RawTyped].[vr_ServiceStatus]...';


GO
CREATE VIEW Cava_RawTyped.vr_ServiceStatus AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY ServiceStatus_bkey ORDER BY SysValidFromDateTime) FROM   Cava_RawTyped.r_ServiceStatus)
							SELECT  t1.ServiceStatus_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.ServiceStatus_bkey, t2.Servicestatus, t2.RegardAsActive, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.ServiceStatus_bkey = t1.ServiceStatus_bkey AND t2._isLast = 1
GO
PRINT N'Creating [IFS].[ProjectCost]...';


GO





CREATE VIEW [IFS].[ProjectCost]
AS
SELECT  SysValidFromDateTime       = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(NULL AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , ProjectCost_bkey         = CAST(CONVERT(NVARCHAR(100), PROJECT_ID) + '#' + CONVERT(NVARCHAR(100), CONTROL_CATEGORY) AS NVARCHAR(250))
        , ProjectID		           = CONVERT(NVARCHAR(100), PROJECT_ID)
		, ControlCategory          = CONVERT(NVARCHAR(100), CONTROL_CATEGORY)
		, Estimated		           = CONVERT(MONEY, ESTIMATED)
		, Baseline		           = CONVERT(MONEY, BASELINE)
		, Used			           = CONVERT(MONEY, USED)
		, Áctual		           = CONVERT(MONEY, ACTUAL)
FROM    OPENQUERY (IFSPROD, '
SELECT 	PROJECT_ID
	, CONTROL_CATEGORY
	, ESTIMATED
	, BASELINE
	, USED
	, ACTUAL
FROM IFSAPP.PROJ_CON_DET_SUM_COST_PROJECT
'   ) AS oq;
GO
PRINT N'Creating [IFS].[Project]...';


GO




CREATE VIEW [IFS].[Project]
AS
SELECT  SysValidFromDateTime       = CAST(DATE_MODIFIED AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(DATE_CREATED AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , Project_bkey             = CONVERT(NVARCHAR(100), PROJECT_ID)
        , Name			           = CONVERT(NVARCHAR(250), NAME)
		, ProgramID	               = CONVERT(NVARCHAR(100), PROGRAM_ID)
		, Category1ID              = CONVERT(NVARCHAR(100), CATEGORY1_ID)
		, Category2ID              = CONVERT(NVARCHAR(100), CATEGORY2_ID)
		, ObjState	               = CONVERT(NVARCHAR(100), OBJSTATE)
		, PlanFinish               = CONVERT(DATETIME, PLAN_FINISH)
		, CloseDate	               = CONVERT(DATETIME, CLOSE_DATE)
		, NumOfHP	               = CONVERT(INT, CF$_NUM_OF_HP)
		, NumOfHC	               = CONVERT(INT, CF$_NUM_OF_HC)
		, NumOfHCAM	               = CONVERT(INT, CF$_NUM_OF_HC_AM)
		, NumOfMDU	               = CONVERT(INT, CF$_NUM_OF_MDU)
		, NumOfCORP	               = CONVERT(INT, CF$_NUM_OF_CORP)
FROM    OPENQUERY (IFSPROD, '
SELECT 	PROJECT_ID
	, DATE_CREATED
    , DATE_MODIFIED
    , NAME
	, PROGRAM_ID
	, CATEGORY1_ID
    , CATEGORY2_ID
    , OBJSTATE
    , PLAN_FINISH
	, CLOSE_DATE
	, COMPANY
	, CF$_NUM_OF_HP
	, CF$_NUM_OF_HC
	, CF$_NUM_OF_HC_AM
	, CF$_NUM_OF_MDU
	, CF$_NUM_OF_CORP 
FROM IFSAPP.PROJECT_CFV
'   ) AS oq;
GO
PRINT N'Creating [IFS_RawTyped].[vr_Project]...';


GO
CREATE VIEW IFS_RawTyped.vr_Project AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Project_bkey ORDER BY SysValidFromDateTime) FROM   IFS_RawTyped.r_Project)
							SELECT  t1.Project_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Project_bkey, t2.Name, t2.ProgramID, t2.Category1ID, t2.Category2ID, t2.ObjState, t2.PlanFinish, t2.CloseDate, t2.NumOfHP, t2.NumOfHC, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Project_bkey = t1.Project_bkey AND t2._isLast = 1
GO
PRINT N'Creating [IFS_RawTyped].[vr_ProjectCost]...';


GO
CREATE VIEW IFS_RawTyped.vr_ProjectCost AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY ProjectCost_bkey ORDER BY SysValidFromDateTime) FROM   IFS_RawTyped.r_ProjectCost)
							SELECT  t1.ProjectCost_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.ProjectCost_bkey, t2.ProjectID, t2.ControlCategory, t2.Estimated, t2.Baseline, t2.Used, t2.Áctual, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.ProjectCost_bkey = t1.ProjectCost_bkey AND t2._isLast = 1
GO
PRINT N'Creating [NBS].[NetadminArticle]...';


GO

CREATE VIEW [NBS].[NetadminArticle]
AS

SELECT  SysValidFromDateTime		= CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime	= CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC		= CAST(null AS DATETIME2(0))
      , SysModifiedUTC				= CAST(GETUTCDATE() AS DATETIME2(0))
      , NetadminArticle_bkey		= CONVERT(NVARCHAR(50), articlenumber)
	  , Service						= CONVERT(NVARCHAR(50), service)
	  , ServiceType					= CONVERT(NVARCHAR(50), type)
	  , MonthlyPrice				= CONVERT(MONEY, monthlyprice)
	  , StartPrice					= CONVERT(MONEY, startprice)
	  , NoBill						= CONVERT(INT, NoBill)
--select *
FROM    OPENQUERY(NBS, '
SELECT 
	articlenumber
	, service
	, type
	, monthlyprice
	, startprice
	, NoBill
FROM [dbCityNetworks].[dbo].[netadmin_service]
') oq;
GO
PRINT N'Creating [NBS_RawTyped].[vr_NetadminArticle]...';


GO
CREATE VIEW NBS_RawTyped.vr_NetadminArticle AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY NetadminArticle_bkey ORDER BY SysValidFromDateTime) FROM   NBS_RawTyped.r_NetadminArticle)
							SELECT  t1.NetadminArticle_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.NetadminArticle_bkey, t2.Service, t2.ServiceType, t2.MonthlyPrice, t2.StartPrice, t2.NoBill, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.NetadminArticle_bkey = t1.NetadminArticle_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Netadmin].[Adress]...';


GO








CREATE VIEW [Netadmin].[Adress]
AS

SELECT  SysValidFromDateTime = CAST(adrandrad AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , Adress_bkey = CONVERT(INT, adrid)
	  , adrkomid = CONVERT(INT, adrkomid)
	  , adrgatid = CONVERT(INT, adrgatid)
	  , adrnrid = CONVERT(INT, adrnrid)
	  , adrupgid = CONVERT(INT, adrupgid)
	  , adrpostid = CONVERT(INT, adrpostid)
	  , adrortid = CONVERT(INT, adrortid)
	  , ipo_installed_date = CONVERT(DATE, ipo_installed_date)
	  , adrkodid1 = CONVERT(INT, adrkodid1)
	  , adrkodid2 = CONVERT(INT, adrkodid2)
	  , adrkodid3 = CONVERT(INT, adrkodid3)
	  , adrkodid4 = CONVERT(INT, adrkodid4)
	  , adrkodid5 = CONVERT(INT, adrkodid5)
	  , adridentitet = CONVERT(NVARCHAR(100), adridentitet)
--select *
FROM    OPENQUERY(NETADMIN, '
SELECT 
	adrid
	, adrandrad
	, adrkomid
	, adrgatid
	, adrnrid
	, adrupgid
	, adrpostid
	, adrortid
	, ipo_installed_date
	, adrkodid1
	, adrkodid2
	, adrkodid3
	, adrkodid4
	, adrkodid5
	, adridentitet
FROM adress.adress
') oq;
GO
PRINT N'Creating [Netadmin].[Abonnemang]...';


GO

CREATE VIEW [Netadmin].[Abonnemang]
AS

SELECT  SysValidFromDateTime = CAST(abochanged AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(NULL AS DATETIME2(0))
      , SysModifiedUTC = CAST(abochanged AS DATETIME2(0))
      , Abonnemang_bkey = CONVERT(INT, aboid)
	  , abostartdat = CONVERT(DATE, CONVERT(VARCHAR(8), CONVERT(INT, abostartdat)))
	  , aboinkopldat = CONVERT(DATE, CONVERT(VARCHAR(8), CONVERT(INT, NULLIF(aboinkopldat, 0))))
	  , aboadressdbid = CONVERT(INT, aboadressdbid)
	  , abotmpid = CONVERT(INT, abotmpid)
	  , aboartnr = CONVERT(NVARCHAR(50), aboartnr)
	  , abostartartnr = CONVERT(NVARCHAR(50), abostartartnr)
	  , aboisp = CONVERT(INT, aboisp)
	  , aboansvarig = CONVERT(NVARCHAR(50), aboansvarig)
--select *
FROM    OPENQUERY(NETADMIN, '
SELECT 
	aboid
	, abochanged
	, abostartdat
	, aboinkopldat
	, aboadressdbid
	, abotmpid
	, aboartnr
	, abostartartnr
	, aboisp
	, aboansvarig
FROM netadmin.abonnemang
WHERE abotmpid <> 2585
') oq;
GO
PRINT N'Creating [Netadmin].[AdressKod]...';


GO










CREATE VIEW [Netadmin].[AdressKod]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , AdressKod_bkey = CONVERT(INT, kodid)
	  , kodnamn = CONVERT(NVARCHAR(100), kodnamn)
--select *
FROM    OPENQUERY(NETADMIN, '
SELECT 
	kodid
	, kodnamn
FROM adress.adrkod
') oq;
GO
PRINT N'Creating [Netadmin].[Isp]...';


GO










CREATE VIEW [Netadmin].[Isp]
AS

SELECT  SysValidFromDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
      , SysSrcGenerationDateTime = CAST(null AS DATETIME2(0))
      , SysDatetimeDeletedUTC = CAST(null AS DATETIME2(0))
      , SysModifiedUTC = CAST(GETUTCDATE() AS DATETIME2(0))

      , Isp_bkey = CONVERT(INT, ispid)
	  , ispnamn = CONVERT(NVARCHAR(50), ispnamn)
--select *
FROM    OPENQUERY(NETADMIN, '
SELECT 
	ispid
	, ispnamn
FROM netadmin.isp
') oq;
GO
PRINT N'Creating [Netadmin].[PreAbonnemang]...';


GO


CREATE VIEW [Netadmin].[PreAbonnemang]
AS
SELECT  SysValidFromDateTime       = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , PreAbonnemang_bkey       = CONVERT(INT, preaboid)
        , Preinkopldat             = CONVERT(DATE, CONVERT(VARCHAR(8), CONVERT(INT, NULLIF(Preinkopldat, 10101))))
        , Preurkopldat             = CONVERT(DATE, CONVERT(VARCHAR(8), CONVERT(INT, Preurkopldat)))
        , Preadrid                 = CONVERT(INT, Preadrid)
        , Pretmpid                 = CONVERT(INT, Pretmpid)
        , Preartnr                 = CONVERT(NVARCHAR(50), Preartnr)
        , Prestartartnr            = CONVERT(NVARCHAR(50), Prestartartnr)
        , aboisp                   = TRY_CAST(CAST(aboisp AS NVARCHAR(250)) AS INT)
        , abostartdat              = TRY_CAST(CAST(abostartdat AS NVARCHAR(8)) AS DATE)
        , aboansvarig              = CAST(aboansvarig AS NVARCHAR(50))
FROM    OPENQUERY (NETADMIN
                   , '
SELECT 
     preaboid
     , preinkopldat
	 , preurkopldat
     , preadrid
     , pretmpid
     , preartnr
     , prestartartnr
    , SUBSTRING_INDEX(SUBSTRING_INDEX(predata_v4,''</aboisp>'',1),''<aboisp>'',-1) as aboisp
    , SUBSTRING_INDEX(SUBSTRING_INDEX(predata_v4,''</abostartdat>'',1),''<abostartdat>'',-1) as abostartdat 
    , SUBSTRING_INDEX(SUBSTRING_INDEX(predata_v4,''</aboansvarig>'',1),''<aboansvarig>'',-1) as aboansvarig
FROM netadmin.prevabo
WHERE pretmpid <> 2585 
'   ) oq;
GO
PRINT N'Creating [Netadmin_RawTyped].[vr_Abonnemang]...';


GO
CREATE VIEW Netadmin_RawTyped.vr_Abonnemang AS
							SELECT * 
							FROM (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Abonnemang_bkey ORDER BY SysValidFromDateTime) FROM   Netadmin_RawTyped.r_Abonnemang) t 
							WHERE t._isLast = 1
GO
PRINT N'Creating [Netadmin_RawTyped].[vr_Adress]...';


GO
CREATE VIEW Netadmin_RawTyped.vr_Adress AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Adress_bkey ORDER BY SysValidFromDateTime) FROM   Netadmin_RawTyped.r_Adress)
							SELECT  t1.Adress_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Adress_bkey, t2.adrkomid, t2.adrgatid, t2.adrnrid, t2.adrupgid, t2.adrpostid, t2.adrortid, t2.ipo_installed_date, t2.adrkodid1, t2.adrkodid2, t2.adrkodid3, t2.adrkodid4, t2.adrkodid5, t2.adridentitet, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Adress_bkey = t1.Adress_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Netadmin_RawTyped].[vr_AdressKod]...';


GO
CREATE VIEW Netadmin_RawTyped.vr_AdressKod AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY AdressKod_bkey ORDER BY SysValidFromDateTime) FROM   Netadmin_RawTyped.r_AdressKod)
							SELECT  t1.AdressKod_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.AdressKod_bkey, t2.kodnamn, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.AdressKod_bkey = t1.AdressKod_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Netadmin_RawTyped].[vr_Isp]...';


GO
CREATE VIEW Netadmin_RawTyped.vr_Isp AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Isp_bkey ORDER BY SysValidFromDateTime) FROM   Netadmin_RawTyped.r_Isp)
							SELECT  t1.Isp_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Isp_bkey, t2.ispnamn, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Isp_bkey = t1.Isp_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Netadmin_RawTyped].[vr_PreAbonnemang]...';


GO
CREATE VIEW Netadmin_RawTyped.vr_PreAbonnemang AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY PreAbonnemang_bkey ORDER BY SysValidFromDateTime) FROM   Netadmin_RawTyped.r_PreAbonnemang)
							SELECT  t1.PreAbonnemang_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.PreAbonnemang_bkey, t2.Preinkopldat, t2.Preurkopldat, t2.Preadrid, t2.Pretmpid, t2.Preartnr, t2.Prestartartnr, t2.aboisp, t2.abostartdat, t2.aboansvarig, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.PreAbonnemang_bkey = t1.PreAbonnemang_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Norm_d].[ServiceProvider]...';


GO
CREATE VIEW [Norm_d].[ServiceProvider]
AS
SELECT  SysValidFromDateTime					= CAST(SysValidFromDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime				= CAST('1900-01-01' AS DATETIME2(0))
        , SysDatetimeDeletedUTC					= CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC						= CAST(GETUTCDATE() AS DATETIME2(0))
        , ServiceProvider_bkey					= Isp_bkey
		, ServiceProvider						= ispnamn
FROM    Netadmin_RawTyped.r_Isp
GO
PRINT N'Creating [Norm_d].[Calendar]...';


GO
CREATE VIEW Norm_d.Calendar
AS
SELECT  SysValidFromDateTime       = CAST('1900-01-01' AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))        
		, fc.Calendar_bkey
		, CalendarDate = fc.Calendar_bkey
FROM    dbo.fn_Calendar('2012-01-01', DATEADD(YEAR, 2, GETUTCDATE())) fc
GO
PRINT N'Creating [Norm_d].[AccessCategory]...';


GO
CREATE VIEW Norm_d.AccessCategory
AS
SELECT  SysValidFromDateTime					= CAST(SysValidFromDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime				= CAST('1900-01-01' AS DATETIME2(0))
        , SysDatetimeDeletedUTC					= CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC						= CAST(GETUTCDATE() AS DATETIME2(0))
        , AccessCategory_bkey						= AdressKod_bkey
		, AccessCategory							= kodnamn
FROM    Netadmin_RawTyped.r_AdressKod
WHERE AdressKod_bkey <> -1
GO
PRINT N'Creating [Norm_d].[SubscriptionProduct]...';


GO
CREATE VIEW Norm_d.SubscriptionProduct
AS
SELECT  SysDatetimeDeletedUTC
        , SysModifiedUTC
        , SysValidFromDateTime
        , SysSrcGenerationDateTime
        , SubscriptionProduct_bkey = NetadminArticle_bkey
        , SubscriptionProduct      = ISNULL(Service, 'Unknown')
        , SubscriptionProductType  = ISNULL(ServiceType, 'Unknown')
        , MonthlyPrice             = ISNULL(MonthlyPrice, 0)
        , StartPrice               = ISNULL(StartPrice, 0)
        , Billable                 = CAST(CASE WHEN NoBill = 0 THEN 'Y' ELSE 'N' END AS NVARCHAR(5))
FROM    NBS_RawTyped.r_NetadminArticle
WHERE   NetadminArticle_bkey <> '-1'
GO
PRINT N'Creating [Norm_d].[Geography]...';


GO
CREATE VIEW Norm_d.Geography
AS
SELECT  SysValidFromDateTime       = CAST(g.SysValidFromDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime
        , SysDatetimeDeletedUTC    = CAST(CASE WHEN g.Deleted = 1 THEN g.SysValidFromDateTime ELSE NULL END AS DATETIME2(0))
        , SysModifiedUTC           
        , Geography_bkey           = g.Geografi_bkey
        , GeographyName            = g.Name
        , MunicipalityCode         = g.Kommunc
        , MunicipalityNamn         = CAST(g.Kommunc AS NVARCHAR(250))
        , StateCode                = g.Lanc
        , StateNamn                = CAST(g.Lanc AS NVARCHAR(250))
        , RegionCode               = g.Regionc
        , RegionName               = CAST(g.Regionc AS NVARCHAR(250))
FROM    Sugar_RawTyped.r_Geografi g
GO
PRINT N'Creating [Norm_d].[SugarEnum]...';


GO
CREATE VIEW Norm_d.SugarEnum
AS

SELECT SysDatetimeDeletedUTC = CASE WHEN re.Deleted = 1 THEN GETUTCDATE() ELSE NULL END
     , re.SysModifiedUTC
     , re.SysIsInferred
     , re.SysValidFromDateTime
     , re.SysSrcGenerationDateTime
     , SugarEnum_bkey = CAST(UPPER(LTRIM(RTRIM(re.ModuleName + '#' + re.ModuleField + '#' + re.FieldKey))) AS NVARCHAR(250))
     , re.FieldValue
FROM Sugar_RawTyped.r_Enum re
WHERE re.Enum_bkey <> '-1'
GO
PRINT N'Creating [Norm_d].[Subscription]...';


GO
CREATE VIEW Norm_d.Subscription
AS
SELECT  ra.SysDatetimeDeletedUTC
        , ra.SysModifiedUTC
        , ra.SysValidFromDateTime
        , ra.SysSrcGenerationDateTime
        , Subscription_bkey          = ra.Abonnemang_bkey
        , SubscriptionProduct_bkey   = ISNULL(ra.aboartnr, '-1')
        , ServiceProvider_bkey       = ISNULL(ra.aboisp, '-1')
        , Access_bkey                = ra.aboadressdbid
        , Calendar_Subscription_bkey = CAST(ra.aboinkopldat AS DATETIME)
        , Calendar_Purchase_bkey     = CAST(ra.abostartdat AS DATETIME)
        , ResoposibleSalesEntity     = ra.aboansvarig
        , IsClosed                   = CAST(0 AS BIT)
FROM    Netadmin_RawTyped.r_Abonnemang ra
WHERE   ra.Abonnemang_bkey <> -1
UNION ALL
SELECT  ra.SysDatetimeDeletedUTC
        , ra.SysModifiedUTC
        , ra.SysValidFromDateTime
        , ra.SysSrcGenerationDateTime
        , Subscription_bkey          = ISNULL(ra.PreAbonnemang_bkey, '-1')
        , SubscriptionProduct_bkey   = ISNULL(ra.Preartnr, '-1')
        , ServiceProvider_bkey       = ra.aboisp
        , Access_bkey                = ra.Preadrid
        , Calendar_Subscription_bkey = ra.Preinkopldat
        , Calendar_Purchase_bkey     = ra.abostartdat
        , ResoposibleSalesEntity     = ra.aboansvarig
        , IsClosed                   = CAST(0 AS BIT)
FROM    Netadmin_RawTyped.r_PreAbonnemang ra
WHERE   ra.PreAbonnemang_bkey <> -1
        AND ra.PreAbonnemang_bkey NOT IN ( SELECT   ra.Abonnemang_bkey FROM Netadmin_RawTyped.r_Abonnemang ra )
UNION ALL
SELECT  ra.SysDatetimeDeletedUTC
        , ra.SysModifiedUTC
        , SysValidFromDateTime       = CAST(GETUTCDATE() AS DATETIME2(0))
        , ra.SysSrcGenerationDateTime
        , Subscription_bkey          = ra.PreAbonnemang_bkey
        , SubscriptionProduct_bkey   = ISNULL(ra.Preartnr, '-1')
        , ServiceProvider_bkey       = ISNULL(ra.aboisp, '-1')
        , Access_bkey                = ra.Preadrid
        , Calendar_Subscription_bkey = ra.Preurkopldat
        , Calendar_Purchase_bkey     = ra.abostartdat
        , ResoposibleSalesEntity     = ra.aboansvarig
        , IsClosed                   = CAST(1 AS BIT)
FROM    Netadmin_RawTyped.r_PreAbonnemang ra
WHERE   ra.PreAbonnemang_bkey <> -1
GO
PRINT N'Creating [Norm_d].[SalesOrder]...';


GO
CREATE VIEW Norm_d.SalesOrder
AS
SELECT  SysValidFromDateTime              = CAST(rb.SysValidFromDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime        = CAST(rb.SysSrcGenerationDateTime AS DATETIME2(0))
        , SysDatetimeDeletedUTC           = CAST(CASE WHEN rb.Deleted = 1 THEN rb.SysValidFromDateTime ELSE NULL END AS DATETIME2(0))
        , SysModifiedUTC                  = CAST(rb.SysModifiedUTC AS DATETIME2(0))
        , SalesOrder_bkey                 = rb.Bestallning_bkey
        , SugarEnum_DeliveryStatus_bkey   = UPPER(LTRIM(RTRIM(ISNULL('IP_Bestallning#status_leverans_c#' + NULLIF(rb.StatusLeveransC, ''), '-1'))))
        , SugarEnum_OrderType_bkey        = UPPER(LTRIM(RTRIM(ISNULL('IP_Bestallning#bestallningstyp_c#' + NULLIF(rb.Bestallningstypc, ''), '-1'))))
        , SugarEnum_ConnectionType_bkey   = UPPER(LTRIM(RTRIM(ISNULL('IP_Bestallning#anslutningstyp_c#' + NULLIF(rb.Anslutningstypc, ''), '-1'))))
        , SugarEnum_OrderSource_bkey      = UPPER(LTRIM(RTRIM(ISNULL('IP_Bestallning#kalla_bestallning_c#' + NULLIF(rb.Kallabestallningc, ''), '-1'))))
        , Opportunity_bkey                = ISNULL(rb.Ipmojligheteripbestallningipmojligheterida, '-1')
        , PlannedInstallationDate         = COALESCE(rb.Bokadkundinstallationc, rb.Planeradkundinstallationc, NULL)
        , ProductBundleYN                 = rb.Tjanstebundlingc
        , ProductBundleName               = ISNULL(rb.Tjanstebundlingnamnc, '')
        , Campaign6MonthInternet          = rb.Kampanj6maninternetc
        , ConnectionFeeSEK                = ISNULL(rb.Anslutningsavgiftc, 0)
        , RotDeductionSEK                 = ISNULL(rb.Rotavdragc, 0)
        , RutDeductionSEK                 = ISNULL(rb.Rutavdragc, 0)
        , DiscountSEK                     = ISNULL(rb.Kompensationc, 0)
        , ExtraFeeSEK                     = ISNULL(rb.Extrakostnadc, 0)
        , ProductBundlePriceAdjustmentSEK = rb.Prisjusteringbundlingc
        , TotalRevenueSEK                 = CAST(ISNULL(rb.Anslutningsavgiftc, 0) + ISNULL(rb.Rotavdragc, 0) + ISNULL(rb.Rutavdragc, 0) - ABS(ISNULL(rb.Kompensationc, 0)) + ISNULL(rb.Extrakostnadc, 0)
                                                 + ISNULL(rb.Prisjusteringbundlingc * 0.600000, 0) AS MONEY)
        , FirstName                       = rb.Fornamnc
        , Surname                         = rb.Efternamnc
        , Email                           = rb.Epostadressc
        , MobilePhoneNo                   = rb.Mobiltelc
        , PersonalIdentityNumber          = rb.Personnummerc
        , OrganizationNumber              = ISNULL(rb.Orgnummerc, '')
        , Age                             = DATEDIFF(YEAR
                                                     , TRY_CAST(LEFT(CASE WHEN LEN(rb.Personnummerc) = 0 THEN NULL
                                                                          WHEN LEFT(rb.Personnummerc, 2) = '19'
                                                                               OR   LEFT(rb.Personnummerc, 2) = '20' THEN rb.Personnummerc ELSE '19' + rb.Personnummerc END, 8) AS DATE)
                                                     , GETDATE())
        , Gender                          = CASE WHEN LEN(LTRIM(RTRIM(ISNULL(rb.Orgnummerc, '')))) > 0 THEN 'Unknown'
                                                 WHEN LEN(rb.Personnummerc) = 0 THEN NULL
                                                 WHEN LEFT(RIGHT(rb.Personnummerc, 2), 1) IN ( '1', '3', '5', '7', '9' ) THEN 'Male' ELSE 'Female' END
FROM    Sugar_RawTyped.r_Bestallning rb
GO
PRINT N'Creating [Norm_d].[Access]...';


GO


CREATE VIEW [Norm_d].[Access]
AS

SELECT ra.SysDatetimeDeletedUTC
     , ra.SysModifiedUTC     
     , ra.SysValidFromDateTime
     , ra.SysSrcGenerationDateTime    
	 , Access_bkey = ra.Adress_bkey     
     , Calenar_Installed_bkey = CAST(ra.ipo_installed_date AS DATETIME)
	 , Opportunity_bkey = CAST(rm.Mojlighet_bkey AS NVARCHAR(100))	 
     , AccessCategory_Lvl1_bkey = ISNULL(NULLIF(ra.adrkodid1, 0), -1)
     , AccessCategory_Lvl2_bkey = ISNULL(NULLIF(ra.adrkodid2, 0), -1)
     , AccessCategory_Lvl3_bkey = ISNULL(NULLIF(ra.adrkodid3, 0), -1)
     , AccessCategory_Lvl4_bkey = ISNULL(NULLIF(ra.adrkodid4, 0), -1)
     , AccessCategory_Lvl5_bkey = ISNULL(NULLIF(ra.adrkodid5, 0), -1)
FROM Netadmin_RawTyped.r_Adress ra
CROSS APPLY (SELECT TOP 1 rm.Mojlighet_bkey FROM Sugar_RawTyped.r_Mojlighet rm WHERE rm.Netadminaddressidc = ra.Adress_bkey ORDER BY rm.SysValidFromDateTime DESC) rm
WHERE ra.Adress_bkey <> -1
GO
PRINT N'Creating [Norm_d].[Project]...';


GO

CREATE VIEW [Norm_d].[Project]
AS
SELECT  SysValidFromDateTime					= CAST(SysValidFromDateTime AS DATETIME2(0))
        , SysSrcGenerationDateTime				= CAST('1900-01-01' AS DATETIME2(0))
        , SysDatetimeDeletedUTC					= CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC						= CAST(GETUTCDATE() AS DATETIME2(0))
        , Project_bkey							= Project_bkey
		, ProjectName							= Name
		, ProgramID								= ProgramID
		, Category1ID							= Category1ID
		, Category2ID							= Category2ID
		, PlanFinish							= PlanFinish
		, CloseDate								= CloseDate
		, NumOfHP								= NumOfHP
		, NumOfHC								= NumOfHC
		, NumOfHCAM								= NumOfHCAM
		, NumOfMDU								= NumOfMDU
		, NumOfCORP								= NumOfCORP
FROM    IFS_RawTyped.r_Project
GO
PRINT N'Creating [Norm_d].[Opportunity]...';


GO
CREATE VIEW Norm_d.Opportunity
AS
SELECT  SysValidFromDateTime          = rm.SysValidFromDateTime
        , SysSrcGenerationDateTime    = rm.SysSrcGenerationDateTime
        , SysDatetimeDeletedUTC       = CASE WHEN rm.Deleted = 1 THEN GETUTCDATE() ELSE NULL END
        , SysModifiedUTC              = rm.SysModifiedUTC
        , Opportunity_bkey            = rm.Mojlighet_bkey
        , Area_bkey                   = rm.Ipomradeipmojligheteripomradeida
        , Access_bkey                 = ISNULL(rm.Netadminaddressidc, -1)
        , AddressMaster_bkey          = ISNULL(rm.Adressmasteridc, -1)
        , OpportunityName             = rm.Name
        , SugarEnum_BusinessType_bkey = CAST(ISNULL(UPPER(LTRIM(RTRIM('IP_Mojligheter#kundtyp_c#' + NULLIF(rm.Kundtypc, '')))), '-1') AS NVARCHAR(250))
        , CustomerType                = CAST(UPPER(LTRIM(RTRIM(rm.Tjanstetypc))) AS NVARCHAR(150))
        , AddressStreetAndNo          = rm.Shippingaddressstreetc
        , AddressPostalCode           = rm.Shippingaddresspostalcode
        , AddressStreetName           = rm.Shippingaddressstreetnamec
        , AddressStreetNo             = rm.Shippingaddressstreetnoc
        , AddressCity                 = rm.Shippingaddresscityc
        , AddressCountry              = rm.Shippingaddresscountryc
        , Latitude                    = rm.Latitudec
        , Longitude                   = rm.Longitudec
        , rm.Fastighetsbeteckningc
        , AcquiredAccess              = CASE rm.Forvarvadhpc WHEN 'Nej' THEN 'No'
                                                             WHEN 'Ja' THEN 'Yes' ELSE 'Unknown' END
FROM    Sugar_RawTyped.r_Mojlighet rm
GO
PRINT N'Creating [Norm_d].[Area]...';


GO
CREATE VIEW Norm_d.Area
AS
SELECT  SysValidFromDateTime                       = o.SysValidFromDateTime
        , SysSrcGenerationDateTime                 = o.SysSrcGenerationDateTime
        , SysDatetimeDeletedUTC                    = CAST(CASE WHEN o.Deleted = 1 THEN o.SysValidFromDateTime ELSE NULL END AS DATETIME2(0))
        , SysModifiedUTC                           = o.SysModifiedUTC
        , Area_bkey                                = o.Omrade_bkey
        , AreaName                                 = o.Name
        , Geography_bkey                           = CAST(ISNULL(NULLIF(o.Ipgeografiipomrade1ipgeografiida, ''), '-1') AS NVARCHAR(100))
        , Project_bkey                             = CAST(ISNULL(NULLIF(o.Projektnummerifsc, ''), '-1') AS NVARCHAR(100))
        , Employee_MetroNetworkManager_bkey        = CAST(ISNULL(NULLIF(o.Useridc, ''), '-1') AS NVARCHAR(100))
        , Employee_RegionConstructionManager_bkey  = CAST(ISNULL(NULLIF(o.Userid2c, ''), '-1') AS NVARCHAR(100))
        , Employee_DeliveryStreamLeader_bkey       = CAST(ISNULL(NULLIF(o.Userid3c, ''), '-1') AS NVARCHAR(100))
        , Employee_ConstructionManager_bkey        = CAST(ISNULL(NULLIF(o.UsersIpOmrade1UsersIda, ''), '-1') AS NVARCHAR(100))
        , SugarEnum_ConstructionStatus_bkey        = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#byggnationsstatus_c#' + NULLIF(o.Byggnationsstatusc, ''), '-1'))))
        , SugarEnum_SalesStatus_bkey               = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#forsaljningsstatus_c#' + NULLIF(o.Forsaljningsstatusc, ''), '-1'))))
        , SugarEnum_SourcingStatus_bkey            = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#status_upphandling_c#' + NULLIF(o.Statusupphandlingc, ''), '-1'))))
        , SugarEnum_IikStatus_bkey                 = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#iikbeslut_c#' + NULLIF(o.Iikbeslutc, ''), '-1'))))
        , SugarEnum_AreaType_bkey                  = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#typ_av_ort_c#' + NULLIF(o.Typavortc, ''), '-1'))))
        , SugarEnum_Contractor_bkey                = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#entreprenor_dd_c#' + NULLIF(o.Entreprenorddc, ''), '-1'))))
        , SugarEnum_SalesOrganisation_bkey         = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#ansvarig_saljorganisation_c#' + NULLIF(o.Ansvarigsaljorganisationc, ''), '-1'))))
        , SugarEnum_ConstructionOrganisation_bkey  = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#ansvarig_byggorganisation_c#' + NULLIF(o.Ansvarigbyggorganisationc, ''), '-1'))))
        , SugarEnum_SubsidyArea_bkey               = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#bidragsomrade_c#' + ISNULL(NULLIF(IIF(o.Bidragsomradec = 'Ja', 'JA_BEVILJAT', o.Bidragsomradec), ''), 'Nej'), '-1'))))
        , SugarEnum_ProjectDesign_bkey             = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#projektering_dd_c#' + NULLIF(o.Projekteringddc, ''), '-1'))))
        , SugarEnum_CountyAdvisoryBoardStatus_bkey = UPPER(LTRIM(RTRIM(ISNULL('IP_Omrade#tillstand_lansstyrelsen_c#' + NULLIF(o.Tillstandlansstyrelsenc, ''), '-1'))))
        , InitialSalesStart                        = o.Forsaljningpaborjadc
        , AfterMarketSalesStart                    = o.Efterkampanjpaborjadc
        , StrategicNetworkPlanningComplete         = o.Natdesignklarc
        , LeasedUplinkExpected                     = o.Planeratleveransnodlankc
        , LeasedUplinkDeployed                     = o.Nodlankdriftsattc
        , TRVPermissionNeeded                      = o.Trvbehovsc
        , SumOfTRVNeeded                           = o.Antaltrvbehovsc
        , SumOfTRVSubmitted                        = o.Antaltrvinskickadec
        , SumOfTRVApproved                         = o.Antaltrvklarac
        , ExpectedApprovalOfTRV                    = o.Planeratklardatumtrvc
        , AllTRVApplicationsSubmitted              = o.Allatillstandtrvinskickadec
        , AllTRVApplicationsApproved               = o.Tillstandtrvklarac
        , CommentOnTRV                             = o.Tillstandtrvklaratextc
        , MunicipalLandPermit                      = o.Kommunavtalklarac
        , BuildingPermitApproved                   = o.Bygglovklarc
        , AllBuildingPermitsSubmitted              = o.Allabygglovinskickadec
        , CommentOnBuildingPermit                  = o.Bygglovklartextc
        , PlannedInstallationStart                 = o.Planeradinstallationstartc
        , PlannedInstallationComplete              = o.Planeratavslutkundinstallc
        , PlannedConstructionStart                 = o.Planeradbyggstartc
        , FinalDocumentationComplete               = o.Slutdokumentationklarc
FROM    Sugar_RawTyped.r_Omrade o
WHERE   o.Omrade_bkey <> '-1'
GO
PRINT N'Creating [Norm_d].[CustomerCategory]...';


GO
CREATE VIEW Norm_d.CustomerCategory
AS
SELECT  SysDatetimeDeletedUTC         = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC              = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysValidFromDateTime        = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysSrcGenerationDateTime    = CAST(GETUTCDATE() AS DATETIME2(0))
        , CustomerCategory_bkey       = cc.CustomerTypeCategoryID
        , cc.CustomerTypeCategory
        , cc.CustomerTypeCategoryDetail
        , SugarEnum_BusinessType_bkey = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.SugarEnum_BusinessType_bkey))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_AreaType_bkey     = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.SugarEnum_AreaType_bkey))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_OrderType_bkey    = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.SugarEnum_OrderType_bkey))) AS NVARCHAR(100)), ''), '%')
        , OpportunityCustomerType     = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.OpportunityCustomerType))) AS NVARCHAR(100)), ''), '%')
        , SugarEnum_SubsidyArea_bkey  = ISNULL(NULLIF(CAST(UPPER(LTRIM(RTRIM(cc.SugarEnum_SubsidyArea_bkey))) AS NVARCHAR(100)), ''), '%')
FROM    ManualData.CustomerCategory cc
GO
PRINT N'Creating [Sugar].[Affarsmojlighet]...';


GO







CREATE VIEW Sugar.Affarsmojlighet
AS
SELECT  SysValidFromDateTime       = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , Affarsmojlighet_bkey     = CONVERT(NVARCHAR(100), Id)
        , Name                     = CONVERT(NVARCHAR(255), name)
        , Deleted                  = CONVERT(INT, deleted)
        , OrdernummerCavaC       = CONVERT(NVARCHAR(255), ordernummer_cava_c)
--select *
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	o.id
	, o.name
    , o.date_entered
    , o.date_modified
    , o.deleted

	, oc.ordernummer_cava_c
FROM opportunities o
LEFT JOIN opportunities_cstm oc on o.id = oc.id_c
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Bestallning]...';


GO


CREATE VIEW Sugar.Bestallning
AS
SELECT  SysValidFromDateTime                         = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime                   = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC                      = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC                             = CAST(date_modified AS DATETIME2(0))
        , Bestallning_bkey                           = CONVERT(NVARCHAR(100), Id)
        , Name                                       = CONVERT(NVARCHAR(255), Name)
        , Deleted                                    = CONVERT(INT, deleted)
        , BillingAddressStreet                       = CONVERT(NVARCHAR(150), billing_address_street)
        , BllingAddressPostalcode                    = CONVERT(NVARCHAR(20), billing_address_postalcode)
        , BillingAddressCity                         = CONVERT(NVARCHAR(100), billing_address_city)
        , StatusLeveransC                            = CONVERT(NVARCHAR(100), status_leverans_c)
        , Statusfaktureringc                         = CONVERT(NVARCHAR(100), status_fakturering_c)
        , Bestallningstypc                           = CONVERT(NVARCHAR(100), bestallningstyp_c)
        , Anslutningstypc                            = CONVERT(NVARCHAR(100), anslutningstyp_c)
        , Kallabestallningc                          = CONVERT(NVARCHAR(100), kalla_bestallning_c)
        , Anslutningsavgiftc                         = CONVERT(MONEY, anslutningsavgift_c)
        , Rotavdragc                                 = CONVERT(MONEY, rotavdrag_c)
        , Rutavdragc                                 = CONVERT(MONEY, rutavdrag_c)
        , Kompensationc                              = CONVERT(MONEY, kompensation_c)
        , Extrakostnadc                              = CONVERT(MONEY, extrakostnad_c)
        , Planeradkundinstallationc                  = CONVERT(DATETIME2, planerad_kundinstallation_c)
        , Bokadkundinstallationc                     = CONVERT(DATETIME2, bokad_kundinstallation_c)
        , Tomtschaktutforddatumc                     = CONVERT(DATE, tomtschakt_utford_datum_c)
        , Installationc                              = CONVERT(DATE, installation_c)
        , Tjanstebundlingc                           = CONVERT(NVARCHAR(100), tjanstebundling_c)
        , Prisjusteringbundlingc                     = CONVERT(MONEY, prisjustering_bundling_c)
        , Tjanstebundlingnamnc                       = CONVERT(NVARCHAR(255), tjanstebundling_namn_c)
        , Netadmintjanstskapaddatumc                 = CONVERT(DATE, netadmin_tjanst_skapad_datum_c)
        , Installationsdatumnetadminc                = CONVERT(DATE, installationsdatumnetadmin_c)
        , Kampanj6maninternetc                       = CONVERT(NVARCHAR(20), kampanj_6_man_internet_c)
        , Fornamnc                                   = CONVERT(NVARCHAR(255), fornamn_c)
        , Efternamnc                                 = CONVERT(NVARCHAR(255), efternamn_c)
        , Epostadressc                               = CONVERT(NVARCHAR(255), epostadress_c)
        , Mobiltelc                                  = CONVERT(NVARCHAR(255), mobiltel_c)
        , Hemtelc                                    = CONVERT(NVARCHAR(255), hemtel_c)
        , Personnummerc                              = CONVERT(NVARCHAR(255), personnummer_c)
        , Orgnummerc                                 = CONVERT(NVARCHAR(255), orgnummer_c)
        , Ipmojligheteripbestallningipmojligheterida = CONVERT(NVARCHAR(100), ip_mojligheter_ip_bestallningip_mojligheter_ida)
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	b.id
	, b.name
    , b.date_entered
    , b.date_modified
    , b.deleted
	, b.billing_address_street
	, b.billing_address_postalcode
	, b.billing_address_city
	, bc.status_leverans_c
	, bc.status_fakturering_c
	, bc.bestallningstyp_c
	, bc.anslutningstyp_c
	, bc.kalla_bestallning_c
	, bc.anslutningsavgift_c
	, bc.rotavdrag_c
	, bc.rutavdrag_c
	, bc.kompensation_c
	, bc.extrakostnad_c
	, bc.planerad_kundinstallation_c
	, bc.bokad_kundinstallation_c
	, bc.tomtschakt_utford_datum_c
	, bc.installation_c
	, bc.tjanstebundling_c
	, bc.prisjustering_bundling_c
	, bc.tjanstebundling_namn_c
	, bc.netadmin_tjanst_skapad_datum_c
	, bc.installationsdatumnetadmin_c
	, bc.kampanj_6_man_internet_c
	, bc.fornamn_c
	, bc.efternamn_c
	, bc.epostadress_c
	, bc.mobiltel_c
	, bc.hemtel_c
	, bc.personnummer_c
	, bc.orgnummer_c
    , mb.ip_mojligheter_ip_bestallningip_mojligheter_ida
FROM ip_bestallning b
LEFT JOIN ip_bestallning_cstm bc on b.id = bc.id_c
LEFT JOIN ip_mojligheter_ip_bestallning_c mb ON mb.ip_mojligheter_ip_bestallningip_bestallning_idb = b.id and mb.deleted = 0
'   ) oq;
GO
PRINT N'Creating [Sugar].[Contact]...';


GO


CREATE VIEW Sugar.Contact
AS
SELECT  SysValidFromDateTime       = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , Contact_bkey             = CONVERT(NVARCHAR(100), Id)
        , deleted                  = CONVERT(INT, deleted)
        , FirstName                = CONVERT(NVARCHAR(100), first_name)
        , LastName                 = CONVERT(NVARCHAR(100), last_name)
        , Title                    = CONVERT(NVARCHAR(100), Title)
        , ContactDescription       = CONVERT(NVARCHAR(500), description)
        , AssignedUserId           = CONVERT(NVARCHAR(100), assigned_user_id)
FROM    OPENQUERY (SUGAR, '
SELECT 	id
	, date_entered
    , date_modified
    , deleted
	, first_name
	, last_name
    , title
    , description
    , assigned_user_id
FROM contacts;
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Geografi]...';


GO







CREATE VIEW Sugar.Geografi
AS
SELECT  SysValidFromDateTime       = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , Geografi_bkey            = CONVERT(NVARCHAR(100), Id)
        , Name                     = CONVERT(NVARCHAR(255), name)
        , Deleted                  = CONVERT(INT, deleted)
        , Kommunc                 = CONVERT(NVARCHAR(100), kommun_c)
        , Lanc                    = CONVERT(NVARCHAR(100), lan_c)
        , Regionc                 = CONVERT(NVARCHAR(100), region_c)
        , Stadc                   = CONVERT(NVARCHAR(255), stad_c)
        , Stadsnatc               = CONVERT(NVARCHAR(100), stadsnat_c)
--select *
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	g.id
	, g.name
    , g.date_entered
    , g.date_modified
    , g.deleted

	, gc.kommun_c
	, gc.lan_c
	, gc.region_c
	, gc.stad_c
	, gc.stadsnat_c
FROM ip_geografi g
LEFT JOIN ip_geografi_cstm gc on g.id = gc.id_c
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Leveransobjekt]...';


GO

CREATE VIEW Sugar.Leveransobjekt
AS
SELECT  SysValidFromDateTime                             = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime                       = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC                          = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC                                 = CAST(GETUTCDATE() AS DATETIME2(0))
        , Leveransobjekt_bkey                            = CONVERT(NVARCHAR(100), Id)
        , Name                                           = CONVERT(NVARCHAR(255), name)
        , Deleted                                        = CONVERT(INT, deleted)
        , Fastighetsbeteckningc                          = CONVERT(NVARCHAR(255), fastighetsbeteckning_c)
        , Byggnationsstatusc                             = CONVERT(NVARCHAR(100), byggnationsstatus_c)
        , Iikbeslutc                                     = CONVERT(NVARCHAR(100), iikbeslut_c)
        , Stadsnatc                                      = CONVERT(NVARCHAR(100), stadsnat_c)
        , Kommunc                                        = CONVERT(NVARCHAR(100), kommun_c)
        , Regionc                                        = CONVERT(NVARCHAR(100), region_c)
        , Typavortc                                      = CONVERT(NVARCHAR(100), typ_av_ort_c)
        , Planeradbyggstartc                             = CONVERT(DATE, planerad_byggstart_c)
        , Planeradbyggavslutc                            = CONVERT(DATE, planerad_byggavslut_c)
        , Planeradstartkundinstallc                      = CONVERT(DATE, planerad_start_kundinstall_c)
        , Projektidifsc                                  = CONVERT(NVARCHAR(255), projekt_id_ifs_c)
        , Entreprenorddc                                 = CONVERT(NVARCHAR(100), entreprenor_dd_c)
        , Ansvarigsaljorganisationc                      = CONVERT(NVARCHAR(100), ansvarig_saljorganisation_c)
        , Ansvarigbyggorganisationc                      = CONVERT(NVARCHAR(100), ansvarig_byggorganisation_c)
        , Affarstypc                                     = CONVERT(NVARCHAR(255), affarstyp_c)
        , Klarrapporteradcavac                           = CONVERT(NVARCHAR(100), klarrapporterad_cava_c)
        , Ipgeografiipleveransobjektipgeografiida        = CONVERT(NVARCHAR(100), ip_geografi_ip_leveransobjektip_geografi_ida)
        , Opportunitiesipleveransobjekt1opportunitiesida = CONVERT(NVARCHAR(100), opportunities_ip_leveransobjekt_1opportunities_ida)
        , Contactsipleveransobjekt2contactsida           = CONVERT(NVARCHAR(100), contacts_ip_leveransobjekt_2contacts_ida)
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	l.id
	, l.name
    , l.date_entered
    , l.date_modified
    , l.deleted
	, lc.fastighetsbeteckning_c
	, lc.byggnationsstatus_c
	, lc.iikbeslut_c
	, lc.stadsnat_c
	, lc.kommun_c
	, lc.region_c
	, lc.typ_av_ort_c
	, lc.planerad_byggstart_c
	, lc.planerad_byggavslut_c
	, lc.planerad_start_kundinstall_c
	, lc.projekt_id_ifs_c
	, lc.entreprenor_dd_c
	, lc.ansvarig_saljorganisation_c
	, lc.ansvarig_byggorganisation_c
	, lc.affarstyp_c
	, lc.klarrapporterad_cava_c
    , gl.ip_geografi_ip_leveransobjektip_geografi_ida
    , ol.opportunities_ip_leveransobjekt_1opportunities_ida
    , cl.contacts_ip_leveransobjekt_2contacts_ida
FROM ip_leveransobjekt l
LEFT JOIN ip_leveransobjekt_cstm lc on l.id = lc.id_c
LEFT JOIN ip_geografi_ip_leveransobjekt_c gl on gl.ip_geografi_ip_leveransobjektip_leveransobjekt_idb = l.id and gl.deleted = 0
LEFT JOIN opportunities_ip_leveransobjekt_1_c ol on ol.opportunities_ip_leveransobjekt_1ip_leveransobjekt_idb = l.id and ol.deleted = 0
LEFT JOIN contacts_ip_leveransobjekt_2_c cl ON cl.contacts_ip_leveransobjekt_2ip_leveransobjekt_idb = l.id and cl.deleted = 0 
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Leveranspunkt]...';


GO


CREATE VIEW Sugar.Leveranspunkt
AS
SELECT  SysValidFromDateTime                                   = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime                             = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC                                = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC                                       = CAST(GETUTCDATE() AS DATETIME2(0))
        , Leveranspunkt_bkey                                   = CONVERT(NVARCHAR(100), Id)
        , Name                                                 = CONVERT(NVARCHAR(255), name)
        , Deleted                                              = CONVERT(INT, deleted)
        , Netadminaddressidc                                   = CONVERT(NVARCHAR(255), netadminaddressid_c)
        , Relevansc                                            = CONVERT(NVARCHAR(100), relevans_c)
        , Migreradc                                            = CONVERT(NVARCHAR(100), migrerad_c)
        , Tjanstetypc                                          = CONVERT(NVARCHAR(100), tjanstetyp_c)
        , Installationsdatumnetadminc                          = CONVERT(DATE, installationsdatumnetadmin_c)
        , Latitudec                                            = CONVERT(DECIMAL(10, 6), latitude_c)
        , Longitudec                                           = CONVERT(DECIMAL(10, 6), longitude_c)
        , Adressmasteridc                                      = CONVERT(INT, adressmaster_id_c)
        , Kampanj6maninternetc                                 = CONVERT(NVARCHAR(100), kampanj_6_man_internet_c)
        , Sexmangratiskampanjtillc                             = CONVERT(DATE, sex_man_gratis_kampanj_till_c)
        , Bostadsnatfinnsc                                     = CONVERT(NVARCHAR(100), bostadsnat_finns_c)
        , Shippingaddressstreetc                               = CONVERT(NVARCHAR(255), shipping_address_street_c)
        , Shippingaddresspostalcodec                           = CONVERT(NVARCHAR(20), shipping_address_postalcode_c)
        , Shippingaddressstreetnamec                           = CONVERT(NVARCHAR(255), shipping_address_streetname_c)
        , Shippingaddressstreetnoc                             = CONVERT(NVARCHAR(20), shipping_address_streetno_c)
        , Shippingaddressentrancec                             = CONVERT(NVARCHAR(20), shipping_address_entrance_c)
        , Shippingaddressapartnumberc                          = CONVERT(NVARCHAR(20), shipping_address_apartnumber_c)
        , Shippingaddressaltapartnoc                           = CONVERT(NVARCHAR(20), shipping_address_alt_apartno_c)
        , Shippingaddresscityc                                 = CONVERT(NVARCHAR(100), shipping_address_city_c)
        , Shippingaddresscountryc                              = CONVERT(NVARCHAR(100), shipping_address_country_c)
        , Fastighetsbeteckningc                                = CONVERT(NVARCHAR(255), fastighetsbeteckning_c)
        , Aktivtjanstc                                         = CONVERT(NVARCHAR(100), aktiv_tjanst_c)
        , Gruppanslutningc                                     = CONVERT(NVARCHAR(255), gruppanslutning_c)
        , Ipleveransobjektipleveranspunkteripleveransobjektida = CONVERT(NVARCHAR(100), ip_leveransobjekt_ip_leveranspunkterip_leveransobjekt_ida)
--select *
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	l.id
	, l.name
    , l.date_entered
    , l.date_modified
    , l.deleted
	, lc.netadminaddressid_c
	, lc.relevans_c
	, lc.migrerad_c
	, lc.tjanstetyp_c
	, lc.installationsdatumnetadmin_c
	, lc.latitude_c
	, lc.longitude_c
	, lc.adressmaster_id_c
	, lc.kampanj_6_man_internet_c
	, lc.sex_man_gratis_kampanj_till_c
	, lc.bostadsnat_finns_c
	, lc.shipping_address_street_c
	, lc.shipping_address_postalcode_c
	, lc.shipping_address_streetname_c
	, lc.shipping_address_streetno_c
	, lc.shipping_address_entrance_c
	, lc.shipping_address_apartnumber_c
	, lc.shipping_address_alt_apartno_c
	, lc.shipping_address_city_c
	, lc.shipping_address_country_c
	, lc.fastighetsbeteckning_c
	, lc.aktiv_tjanst_c
	, lc.gruppanslutning_c
    , ll.ip_leveransobjekt_ip_leveranspunkterip_leveransobjekt_ida
FROM ip_leveranspunkter l
LEFT JOIN ip_leveranspunkter_cstm lc on l.id = lc.id_c
LEFT JOIN ip_leveransobjekt_ip_leveranspunkter_c ll on ll.ip_leveransobjekt_ip_leveranspunkterip_leveranspunkter_idb = l.id and ll.deleted = 0
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Mojlighet]...';


GO

CREATE VIEW [Sugar].Mojlighet
AS
SELECT  SysValidFromDateTime               = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime         = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC            = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC                   = CAST(date_modified AS DATETIME2(0))
        , Mojlighet_bkey                   = CONVERT(NVARCHAR(100), Id)
        , Name                             = CONVERT(NVARCHAR(255), name)
        , Deleted                          = CONVERT(INT, deleted)
        , Shippingaddresspostalcode        = CONVERT(NVARCHAR(20), shipping_address_postalcode)
        , Kundtypc                         = CONVERT(NVARCHAR(100), kundtyp_c)
        , Netadminaddressidc               = CONVERT(INT, netadminaddressid_c)
        , Relevansc                        = CONVERT(NVARCHAR(100), relevans_c)
        , Migreradc                        = CONVERT(NVARCHAR(100), migrerad_c)
        , Tjanstetypc                      = CONVERT(NVARCHAR(100), tjanstetyp_c)
        , Installationsdatumnetadminc      = CONVERT(DATE, installationsdatumnetadmin_c)
        , Latitudec                        = CONVERT(DECIMAL(10, 6), latitude_c)
        , Longitudec                       = CONVERT(DECIMAL(10, 6), longitude_c)
        , Adressmasteridc                  = CONVERT(INT, adressmaster_id_c)
        , Kampanj6maninternetc             = CONVERT(NVARCHAR(100), kampanj_6_man_internet_c)
        , Sexmangratiskampanjtillc         = CONVERT(DATE, sex_man_gratis_kampanj_till_c)
        , Shippingaddressstreetc           = CONVERT(NVARCHAR(255), shipping_address_street_c)
        , Shippingaddressstreetnamec       = CONVERT(NVARCHAR(255), shipping_address_streetname_c)
        , Shippingaddressstreetnoc         = CONVERT(NVARCHAR(10), shipping_address_streetno_c)
        , Shippingaddressentrancec         = CONVERT(NVARCHAR(10), shipping_address_entrance_c)
        , Shippingaddressapartnumberc      = CONVERT(NVARCHAR(10), shipping_address_apartnumber_c)
        , Shippingaddressaltapartnoc       = CONVERT(NVARCHAR(20), shipping_address_alt_apartno_c)
        , Shippingaddresscityc             = CONVERT(NVARCHAR(255), shipping_address_city_c)
        , Shippingaddresscountryc          = CONVERT(NVARCHAR(100), shipping_address_country_c)
        , Fastighetsbeteckningc            = CONVERT(NVARCHAR(255), fastighetsbeteckning_c)
        , Aktivtjanstc                     = CONVERT(NVARCHAR(100), aktiv_tjanst_c)
        , Forvarvadhpc                     = CONVERT(NVARCHAR(100), forvarvad_hp_c)
        , Ipomradeipmojligheteripomradeida = CONVERT(NVARCHAR(100), ip_omrade_ip_mojligheterip_omrade_ida)
--select *
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	m.id
	, m.name
    , m.date_entered
    , m.date_modified
    , m.deleted
	, m.shipping_address_postalcode
	, mc.kundtyp_c
	, mc.netadminaddressid_c
	, mc.relevans_c
	, mc.migrerad_c
	, mc.tjanstetyp_c
	, mc.installationsdatumnetadmin_c
	, mc.latitude_c
	, mc.longitude_c
	, mc.adressmaster_id_c
	, mc.kampanj_6_man_internet_c
	, mc.sex_man_gratis_kampanj_till_c
	, mc.shipping_address_street_c
	, mc.shipping_address_streetname_c
	, mc.shipping_address_streetno_c
	, mc.shipping_address_entrance_c
	, mc.shipping_address_apartnumber_c
	, mc.shipping_address_alt_apartno_c
	, mc.shipping_address_city_c
	, mc.shipping_address_country_c
	, mc.fastighetsbeteckning_c
	, mc.aktiv_tjanst_c
	, mc.forvarvad_hp_c
    , om.ip_omrade_ip_mojligheterip_omrade_ida
FROM ip_mojligheter m
LEFT JOIN ip_mojligheter_cstm mc on m.id = mc.id_c
LEFT JOIN ip_omrade_ip_mojligheter_c om ON om.ip_omrade_ip_mojligheterip_mojligheter_idb = m.id AND om.deleted = 0
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[User]...';


GO


CREATE VIEW Sugar.[User]
AS
SELECT  SysValidFromDateTime       = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , User_bkey                = CONVERT(NVARCHAR(100), Id)
        , Username                 = CONVERT(NVARCHAR(100), user_name)
        , Deleted                  = CONVERT(INT, deleted)
        , FirstName                = CONVERT(NVARCHAR(30), first_name)
        , LastName                 = CONVERT(NVARCHAR(30), last_name)
        , Title                    = CONVERT(NVARCHAR(50), Title)
        , Department               = CONVERT(NVARCHAR(50), Department)
        , EmployeeStatus           = CONVERT(NVARCHAR(100), employee_status)
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	id
	, user_name
    , date_entered
    , date_modified
    , deleted
	, first_name
	, last_name
    , title
    , department
    , employee_status
FROM users;
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Enum]...';


GO



CREATE VIEW [Sugar].[Enum]
AS
SELECT  SysValidFromDateTime       = CAST(GETUTCDATE() AS DATETIME2(0))
        , SysSrcGenerationDateTime = CAST(NULL AS DATETIME2(0))
        , SysDatetimeDeletedUTC    = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC           = CAST(GETUTCDATE() AS DATETIME2(0))
        , Enum_bkey                = CONVERT(NVARCHAR(100), Id)
        , ModuleName               = CONVERT(NVARCHAR(250), moduleName)
		, ModuleField              = CONVERT(NVARCHAR(250), moduleField)
		, FieldKey		           = CONVERT(NVARCHAR(250), fieldKey)
		, FieldValue               = CONVERT(NVARCHAR(250), fieldValue)
		, Deleted	               = CONVERT(INT, deleted)
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	id
	, moduleName
    , moduleField
    , fieldKey
    , fieldValue
	, deleted
FROM enum;
'   ) AS oq;
GO
PRINT N'Creating [Sugar].[Omrade]...';


GO


CREATE VIEW [Sugar].[Omrade]
AS
SELECT  SysValidFromDateTime               = CAST(date_modified AS DATETIME2(0))
        , SysSrcGenerationDateTime         = CAST(date_entered AS DATETIME2(0))
        , SysDatetimeDeletedUTC            = CAST(NULL AS DATETIME2(0))
        , SysModifiedUTC                   = CAST(GETUTCDATE() AS DATETIME2(0))
        , Omrade_bkey                      = CONVERT(NVARCHAR(100), Id)
        , Name                             = CONVERT(NVARCHAR(255), name)
        , Deleted                          = CONVERT(INT, deleted)
        , Byggnationsstatusc               = CONVERT(NVARCHAR(100), byggnationsstatus_c)
        , Forsaljningsstatusc              = CONVERT(NVARCHAR(100), forsaljningsstatus_c)
        , Statusupphandlingc               = CONVERT(NVARCHAR(100), status_upphandling_c)
        , Iikbeslutc                       = CONVERT(NVARCHAR(100), iikbeslut_c)
        , Omraderegionc                    = CONVERT(NVARCHAR(100), omrade_region_c)
        , Stadsnatddc                      = CONVERT(NVARCHAR(100), stadsnat_dd_c)
        , Kommunddc                        = CONVERT(NVARCHAR(100), kommun_dd_c)
        , Typavortc                        = CONVERT(NVARCHAR(100), typ_av_ort_c)
        , Forsaljningpaborjadc             = CONVERT(DATE, forsaljning_paborjad_c)
        , Efterkampanjpaborjadc            = CONVERT(DATE, efterkampanj_paborjad_c)
        , Saljstopputesaljc                = CONVERT(DATE, saljstopputesalj_c)
        , Planeradbyggstartc               = CONVERT(DATE, planerad_byggstart_c)
        , Planeratklardatumc               = CONVERT(DATE, planerat_klardatum_c)
        , Planeradinstallationstartc       = CONVERT(DATE, planerad_installationstart_c)
        , Planeratavslutkundinstallc       = CONVERT(DATE, planerat_avslut_kundinstall_c)
        , Dateoverlamnadtillbyggc          = CONVERT(DATE, date_overlamnad_till_bygg_c)
        , Projektnummerifsc                = CONVERT(NVARCHAR(255), projektnummer_ifs_c)
        , Entreprenorddc                   = CONVERT(NVARCHAR(100), entreprenor_dd_c)
        , Ansvarigsaljorganisationc        = CONVERT(NVARCHAR(100), ansvarig_saljorganisation_c)
        , Ansvarigbyggorganisationc        = CONVERT(NVARCHAR(100), ansvarig_byggorganisation_c)
        , Useridc                          = CONVERT(NVARCHAR(100), user_id_c)
        , Userid2c                         = CONVERT(NVARCHAR(100), user_id2_c)
        , Userid3c                         = CONVERT(NVARCHAR(100), user_id3_c)
        , Bidragsomradec                   = CONVERT(NVARCHAR(100), bidragsomrade_c)
        , Natdesignklarc                   = CONVERT(DATE, natdesign_klar_c)
        , Planeratleveransnodlankc         = CONVERT(DATE, planerat_leverans_nod_lank_c)
        , Nodlankdriftsattc                = CONVERT(DATE, nod_lank_driftsatt_c)
        , Projekteringddc                  = CONVERT(NVARCHAR(100), projektering_dd_c)
        , Kommunavtalklarac                = CONVERT(DATE, kommunavtal_klara_c)
        , Trvbehovsc                       = CONVERT(NVARCHAR(100), trv_behovs_c)
        , Planeratklardatumtrvc            = CONVERT(DATE, planerat_klardatum_trv_c)
        , Antaltrvbehovsc                  = CONVERT(INT, antal_trv_behovs_c)
        , Antaltrvklarac                   = CONVERT(INT, antal_trv_klara_c)
        , Tillstandtrvklarac               = CONVERT(DATE, tillstand_trv_klara_c)
        , Tillstandtrvklaratextc           = CONVERT(NVARCHAR(255), tillstand_trv_klara_text_c)
        , Allatillstandtrvinskickadec      = CONVERT(DATE, allatillstandtrvinskickade_c)
        , Antaltrvinskickadec              = CONVERT(INT, antal_trv_inskickade_c)
        , Tillstandlansstyrelsenc          = CONVERT(NVARCHAR(100), tillstand_lansstyrelsen_c)
        , Lansstyrelseninskickatc          = CONVERT(DATE, lansstyrelsen_inskickat_c)
        , Bygglovklarc                     = CONVERT(DATE, bygglov_klar_c)
        , Bygglovklartextc                 = CONVERT(NVARCHAR(255), bygglov_klar_text_c)
        , Allabygglovinskickadec           = CONVERT(DATE, allabygglovinskickade_c)
        , Slutdokumentationklarc           = CONVERT(DATE, slutdokumentation_klar_c)
        , Konkurrentc                      = CONVERT(NVARCHAR(255), konkurrent_c)
        , Iikgodkantdatumc                 = CONVERT(DATE, iik_godkant_datum_c)
        , Antalutfordaschaktmeterc         = CONVERT(INT, antalutfordaschaktmeter_c)
        , Antalplaneradeschaktmeterc       = CONVERT(INT, antalplaneradeschaktmeter_c)
        , Antalfibreradefosarc             = CONVERT(INT, antal_fibrerade_fosar_c)
        , Planeratantalfosarc              = CONVERT(INT, planerat_antal_fosar_c)
        , Antalmarkavtalbehovsc            = CONVERT(INT, antal_markavtal_behovs_c)
        , Ipgeografiipomrade1ipgeografiida = CONVERT(NVARCHAR(100), ip_geografi_ip_omrade_1ip_geografi_ida)
        , UsersIpOmrade1UsersIda           = CONVERT(NVARCHAR(100), users_ip_omrade_1users_ida)
--select *
FROM    OPENQUERY (SUGAR
                   , '
SELECT 
	o.id
	, o.name
    , o.date_entered
    , o.date_modified
    , o.deleted
    , oc.byggnationsstatus_c
    , oc.forsaljningsstatus_c
	, oc.status_upphandling_c
	, oc.iikbeslut_c
	, oc.omrade_region_c
	, oc.stadsnat_dd_c
	, oc.kommun_dd_c
	, oc.typ_av_ort_c
	, oc.forsaljning_paborjad_c
	, oc.efterkampanj_paborjad_c
	, oc.saljstopputesalj_c
	, oc.planerad_byggstart_c
	, oc.planerat_klardatum_c
	, oc.planerad_installationstart_c
	, oc.planerat_avslut_kundinstall_c
	, oc.date_overlamnad_till_bygg_c
	, oc.projektnummer_ifs_c
	, oc.entreprenor_dd_c
	, oc.ansvarig_saljorganisation_c
	, oc.ansvarig_byggorganisation_c
	, oc.user_id_c
	, oc.user_id2_c
	, oc.user_id3_c
	, oc.bidragsomrade_c
	, oc.natdesign_klar_c
	, oc.planerat_leverans_nod_lank_c
	, oc.nod_lank_driftsatt_c
	, oc.projektering_dd_c
	, oc.kommunavtal_klara_c
	, oc.trv_behovs_c
	, oc.planerat_klardatum_trv_c
	, oc.antal_trv_behovs_c
	, oc.antal_trv_klara_c
	, oc.tillstand_trv_klara_c
	, oc.tillstand_trv_klara_text_c
	, oc.allatillstandtrvinskickade_c
	, oc.antal_trv_inskickade_c
	, oc.tillstand_lansstyrelsen_c
	, oc.lansstyrelsen_inskickat_c
	, oc.bygglov_klar_c
	, oc.bygglov_klar_text_c
	, oc.allabygglovinskickade_c
	, oc.slutdokumentation_klar_c
	, oc.konkurrent_c
	, oc.iik_godkant_datum_c 
	, oc.antalutfordaschaktmeter_c
	, oc.antalplaneradeschaktmeter_c
	, oc.antal_fibrerade_fosar_c
	, oc.planerat_antal_fosar_c
	, oc.antal_markavtal_behovs_c
    , go.ip_geografi_ip_omrade_1ip_geografi_ida
    , uo.users_ip_omrade_1users_ida
FROM ip_omrade o
LEFT JOIN ip_omrade_cstm oc on o.id = oc.id_c
LEFT JOIN ip_geografi_ip_omrade_1_c go on go.ip_geografi_ip_omrade_1ip_omrade_idb = o.id and go.deleted = 0
LEFT JOIN users_ip_omrade_1_c uo ON uo.users_ip_omrade_1ip_omrade_idb = o.id and uo.deleted = 0
'   ) AS oq;
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Leveransobjekt]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Leveransobjekt AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Leveransobjekt_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Leveransobjekt)
							SELECT  t1.Leveransobjekt_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Leveransobjekt_bkey, t2.Name, t2.Deleted, t2.Fastighetsbeteckningc, t2.Byggnationsstatusc, t2.Iikbeslutc, t2.Stadsnatc, t2.Kommunc, t2.Regionc, t2.Typavortc, t2.Planeradbyggstartc, t2.Planeradbyggavslutc, t2.Planeradstartkundinstallc, t2.Projektidifsc, t2.Entreprenorddc, t2.Ansvarigsaljorganisationc, t2.Ansvarigbyggorganisationc, t2.Affarstypc, t2.Klarrapporteradcavac, t2.Ipgeografiipleveransobjektipgeografiida, t2.Opportunitiesipleveransobjekt1opportunitiesida, t2.Contactsipleveransobjekt2contactsida, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Leveransobjekt_bkey = t1.Leveransobjekt_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Leveranspunkt]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Leveranspunkt AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Leveranspunkt_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Leveranspunkt)
							SELECT  t1.Leveranspunkt_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Leveranspunkt_bkey, t2.Name, t2.Deleted, t2.Netadminaddressidc, t2.Relevansc, t2.Migreradc, t2.Tjanstetypc, t2.Installationsdatumnetadminc, t2.Latitudec, t2.Longitudec, t2.Adressmasteridc, t2.Kampanj6maninternetc, t2.Sexmangratiskampanjtillc, t2.Bostadsnatfinnsc, t2.Shippingaddressstreetc, t2.Shippingaddresspostalcodec, t2.Shippingaddressstreetnamec, t2.Shippingaddressstreetnoc, t2.Shippingaddressentrancec, t2.Shippingaddressapartnumberc, t2.Shippingaddressaltapartnoc, t2.Shippingaddresscityc, t2.Shippingaddresscountryc, t2.Fastighetsbeteckningc, t2.Aktivtjanstc, t2.Gruppanslutningc, t2.Ipleveransobjektipleveranspunkteripleveransobjektida, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Leveranspunkt_bkey = t1.Leveranspunkt_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Mojlighet]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Mojlighet AS
							SELECT * 
							FROM (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Mojlighet_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Mojlighet) t 
							WHERE t._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Omrade]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Omrade AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Omrade_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Omrade)
							SELECT  t1.Omrade_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Omrade_bkey, t2.Name, t2.Deleted, t2.Byggnationsstatusc, t2.Forsaljningsstatusc, t2.Statusupphandlingc, t2.Iikbeslutc, t2.Omraderegionc, t2.Stadsnatddc, t2.Kommunddc, t2.Typavortc, t2.Forsaljningpaborjadc, t2.Efterkampanjpaborjadc, t2.Saljstopputesaljc, t2.Planeradbyggstartc, t2.Planeratklardatumc, t2.Planeradinstallationstartc, t2.Planeratavslutkundinstallc, t2.Dateoverlamnadtillbyggc, t2.Projektnummerifsc, t2.Entreprenorddc, t2.Ansvarigsaljorganisationc, t2.Ansvarigbyggorganisationc, t2.Useridc, t2.Userid2c, t2.Userid3c, t2.Bidragsomradec, t2.Natdesignklarc, t2.Planeratleveransnodlankc, t2.Nodlankdriftsattc, t2.Projekteringddc, t2.Kommunavtalklarac, t2.Trvbehovsc, t2.Planeratklardatumtrvc, t2.Antaltrvbehovsc, t2.Antaltrvklarac, t2.Tillstandtrvklarac, t2.Tillstandtrvklaratextc, t2.Allatillstandtrvinskickadec, t2.Antaltrvinskickadec, t2.Tillstandlansstyrelsenc, t2.Lansstyrelseninskickatc, t2.Bygglovklarc, t2.Bygglovklartextc, t2.Allabygglovinskickadec, t2.Slutdokumentationklarc, t2.Konkurrentc, t2.Iikgodkantdatumc, t2.Antalutfordaschaktmeterc, t2.Antalplaneradeschaktmeterc, t2.Antalfibreradefosarc, t2.Planeratantalfosarc, t2.Antalmarkavtalbehovsc, t2.Ipgeografiipomrade1ipgeografiida, t2.UsersIpOmrade1UsersIda, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Omrade_bkey = t1.Omrade_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_User]...';


GO
CREATE VIEW Sugar_RawTyped.vr_User AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY User_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_User)
							SELECT  t1.User_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.User_bkey, t2.Username, t2.Deleted, t2.FirstName, t2.LastName, t2.Title, t2.Department, t2.EmployeeStatus, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.User_bkey = t1.User_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Affarsmojlighet]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Affarsmojlighet AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Affarsmojlighet_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Affarsmojlighet)
							SELECT  t1.Affarsmojlighet_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Affarsmojlighet_bkey, t2.Name, t2.Deleted, t2.OrdernummerCavaC, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Affarsmojlighet_bkey = t1.Affarsmojlighet_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Bestallning]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Bestallning AS
							SELECT * 
							FROM (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Bestallning_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Bestallning) t 
							WHERE t._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Contact]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Contact AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Contact_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Contact)
							SELECT  t1.Contact_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Contact_bkey, t2.deleted, t2.FirstName, t2.LastName, t2.Title, t2.ContactDescription, t2.AssignedUserId, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Contact_bkey = t1.Contact_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Enum]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Enum AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Enum_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Enum)
							SELECT  t1.Enum_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Enum_bkey, t2.ModuleName, t2.ModuleField, t2.FieldKey, t2.FieldValue, t2.Deleted, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Enum_bkey = t1.Enum_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Sugar_RawTyped].[vr_Geografi]...';


GO
CREATE VIEW Sugar_RawTyped.vr_Geografi AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY Geografi_bkey ORDER BY SysValidFromDateTime) FROM   Sugar_RawTyped.r_Geografi)
							SELECT  t1.Geografi_key, t2.SysExecutionLog_key, t2.SysDatetimeInsertedUTC, t2.SysDatetimeUpdatedUTC, t2.SysDatetimeDeletedUTC, t2.SysModifiedUTC, t2.SysIsInferred, t2.SysValidFromDateTime, t2.SysSrcGenerationDateTime, t2.Geografi_bkey, t2.Name, t2.Deleted, t2.Kommunc, t2.Lanc, t2.Regionc, t2.Stadc, t2.Stadsnatc, t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.Geografi_bkey = t1.Geografi_bkey AND t2._isLast = 1
GO
PRINT N'Creating [Norm_d].[Employee]...';


GO
CREATE VIEW Norm_d.Employee
AS

SELECT SysDatetimeDeletedUTC = CAST(CASE WHEN vu.Deleted = 1 THEN vu.SysValidFromDateTime ELSE NULL END AS DATETIME2(0))
     , vu.SysModifiedUTC
     , vu.SysValidFromDateTime
     , vu.SysSrcGenerationDateTime
     , Employee_bkey = vu.User_bkey     
     , EmployeeName = CAST(vu.FirstName + ' ' + vu.LastName AS NVARCHAR(150))
     , vu.Title
     , vu.Department
     , vu.EmployeeStatus
FROM Sugar_RawTyped.vr_User vu
WHERE vu._isLast = 1 AND vu.User_key <> -1
GO
PRINT N'Creating [dbo].[CreateNormIsLastView]...';


GO
CREATE PROCEDURE [dbo].[CreateNormIsLastView]
AS


/* declare variables */
DECLARE @sqldrop NVARCHAR(max), @sqlcreate NVARCHAR(max)

DECLARE sqlCreateView CURSOR FAST_FORWARD READ_ONLY FOR 
SELECT  sqldrop     = 'IF EXISTS (SELECT * from sys.objects WHERE object_id = OBJECT_ID(N''' + t._viewFullName + ''') AND type IN (N''V'')) DROP VIEW ' + t._viewFullName
        , sqlCreate = CASE WHEN t._type = 'Fact' THEN 'CREATE VIEW ' + t._viewFullName + ' AS
							SELECT * 
							FROM (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY ' + t._bkey + ' ORDER BY SysValidFromDateTime) FROM   ' + t._tableFullName + ') t 
							WHERE t._isLast = 1'
                           WHEN t._type = 'Dim' THEN 'CREATE VIEW ' + t._viewFullName + ' AS
							WITH temp AS (SELECT *, _isLast = LEAD(0,1,1) OVER (PARTITION BY ' + t._bkey + ' ORDER BY SysValidFromDateTime) FROM   ' + t._tableFullName + ')
							SELECT '                 + t._column + ', t1._isLast
							FROM temp t1 
							INNER JOIN temp t2 ON t2.' + t._bkey + ' = t1.' + t._bkey + ' AND t2._isLast = 1' ELSE 'ERROR' END
FROM    (   SELECT  _bkey            = SUBSTRING(t.TABLE_NAME, CHARINDEX('_', t.TABLE_NAME, 1)+1, 100)  + '_bkey'
                    , _key           = SUBSTRING(t.TABLE_NAME, CHARINDEX('_', t.TABLE_NAME, 1)+1, 100) + '_key'
                    , _tableName     = t.TABLE_NAME
                    , _viewName      = 'v' + t.TABLE_NAME
                    , _schema        = t.TABLE_SCHEMA
                    , _tableFullName = t.TABLE_SCHEMA + '.' + t.TABLE_NAME
                    , _viewFullName  = t.TABLE_SCHEMA + '.' + 'v' + t.TABLE_NAME
                    , _column        = STUFF((   SELECT     CASE WHEN c.COLUMN_NAME = SUBSTRING(t.TABLE_NAME, CHARINDEX('_', t.TABLE_NAME, 1)+1, 100) + '_key' THEN ', t1.' ELSE ', t2.' END + c.COLUMN_NAME
                                                 FROM       INFORMATION_SCHEMA.COLUMNS c
                                                 WHERE      c.TABLE_NAME = t.TABLE_NAME
                                                   AND      c.TABLE_SCHEMA    = t.TABLE_SCHEMA
                                                   AND      c.TABLE_CATALOG   = t.TABLE_CATALOG
                                                 ORDER BY   c.ORDINAL_POSITION
                                                 FOR XML PATH(''))
                                             , 1
                                             , 1
                                             , '')
                    , _type          = CASE WHEN EXISTS (   SELECT      *
                                                            FROM        INFORMATION_SCHEMA.COLUMNS c
                                                            WHERE       c.TABLE_NAME = t.TABLE_NAME
                                                              AND       c.TABLE_SCHEMA     = t.TABLE_SCHEMA
                                                              AND       c.TABLE_CATALOG    = t.TABLE_CATALOG
                                                              AND       c.COLUMN_NAME      = SUBSTRING(t.TABLE_NAME, CHARINDEX('_', t.TABLE_NAME, 1)+1, 100) + '_key') THEN 'Dim' ELSE 'Fact' END
            FROM    INFORMATION_SCHEMA.TABLES t
            WHERE   t.TABLE_TYPE = 'BASE TABLE') t


OPEN sqlCreateView

FETCH NEXT FROM sqlCreateView INTO @sqldrop, @sqlcreate

WHILE @@FETCH_STATUS = 0
BEGIN
    
	PRINT @sqldrop
	EXEC(@sqldrop)

	PRINT @sqlcreate
	EXEC(@sqlcreate)
    FETCH NEXT FROM sqlCreateView INTO @sqldrop, @sqlcreate
END

CLOSE sqlCreateView
DEALLOCATE sqlCreateView
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

TRUNCATE TABLE [ManualData].[CustomerCategory]

SET IDENTITY_INSERT [ManualData].[CustomerCategory] ON 

GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (1, N'SDU Urban', N'SDU Urban', N'IP_MOJLIGHETER#KUNDTYP_C#SDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-S', N'', N'IP_OMRADE#TYP_AV_ORT_C#TATORT', N'<>IP_BESTALLNING#BESTALLNINGSTYP_C#EFTERBESTALLNING', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (2, N'SDU Urban', N'SDU Urban Upsell', N'IP_MOJLIGHETER#KUNDTYP_C#SDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-S', N'', N'IP_OMRADE#TYP_AV_ORT_C#TATORT', N'=IP_BESTALLNING#BESTALLNINGSTYP_C#EFTERBESTALLNING', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (3, N'SDU Rural', N'SDU Rural Commercial', N'IP_MOJLIGHETER#KUNDTYP_C#SDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-S', N'', N'IP_OMRADE#TYP_AV_ORT_C#GLESBYGD', N'<>IP_BESTALLNING#BESTALLNINGSTYP_C#EFTERBESTALLNING', N'IP_OMRADE#BIDRAGSOMRADE_C#NEJ')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (4, N'SDU Rural', N'SDU Rural Subsidies', N'IP_MOJLIGHETER#KUNDTYP_C#SDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-S', N'', N'IP_OMRADE#TYP_AV_ORT_C#GLESBYGD', N'<>IP_BESTALLNING#BESTALLNINGSTYP_C#EFTERBESTALLNING', N'IP_OMRADE#BIDRAGSOMRADE_C#JA_BEVILJAT, IP_OMRADE#BIDRAGSOMRADE_C#JA_ANSOKT  ')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (5, N'SDU Rural', N'SDU Rural Upsell', N'IP_MOJLIGHETER#KUNDTYP_C#SDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-S', N'', N'IP_OMRADE#TYP_AV_ORT_C#GLESBYGD', N'=IP_BESTALLNING#BESTALLNINGSTYP_C#EFTERBESTALLNING', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (6, N'MDU', N'MDU brf', N'IP_MOJLIGHETER#KUNDTYP_C#MDU,IP_MOJLIGHETER#KUNDTYP_C#SDU-R', N'Privat', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (7, N'MDU', N'MDU Byggherrar & Fast.äg.', N'IP_MOJLIGHETER#KUNDTYP_C#MDU-N,IP_MOJLIGHETER#KUNDTYP_C#SDU-N', N'', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (8, N'MDU', N'MDU Sthlm', N'IP_MOJLIGHETER#KUNDTYP_C#MDU-sthlm', N'Privat', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (9, N'MDU', N'Byalag', N'IP_MOJLIGHETER#KUNDTYP_C#SDU-FKA', N'', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (10, N'B2B', N'CORP-FKA', N'IP_MOJLIGHETER#KUNDTYP_C#CORP-FKA', N'', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (11, N'B2B', N'CORP', N'IP_MOJLIGHETER#KUNDTYP_C#CORP', N'', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (12, N'B2B', N'MDU företag', N'IP_MOJLIGHETER#KUNDTYP_C#MDU', N'Foretag', N'', N'', N'')
GO
INSERT [ManualData].[CustomerCategory] ([CustomerTypeCategoryID], [CustomerTypeCategory], [CustomerTypeCategoryDetail], [SugarEnum_BusinessType_bkey], [OpportunityCustomerType], [SugarEnum_AreaType_bkey], [SugarEnum_OrderType_bkey], [SugarEnum_SubsidyArea_bkey]) VALUES (13, N'B2B', N'MDU Sthlm företag', N'IP_MOJLIGHETER#KUNDTYP_C#MDU-sthlm', N'Foretag', N'', N'', N'')
GO
SET IDENTITY_INSERT [ManualData].[CustomerCategory] OFF
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
