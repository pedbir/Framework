    
        <ScriptTaskProject ProjectCoreName="ST_ParsDateTimeFileName" Name="ST_ParsDateTimeFileName">
            <AssemblyReferences>
                <AssemblyReference AssemblyPath="Microsoft.SqlServer.ManagedDTS.dll" />
                <AssemblyReference AssemblyPath="Microsoft.SqlServer.ScriptTask.dll" />
                <AssemblyReference AssemblyPath="System.dll" />
                <AssemblyReference AssemblyPath="System.AddIn.dll" />
                <AssemblyReference AssemblyPath="System.Data.dll" />
                <AssemblyReference AssemblyPath="System.Windows.Forms.dll" />
                <AssemblyReference AssemblyPath="System.Xml.dll" />
            </AssemblyReferences>
            <Files>
                <File Path="AssemblyInfo.cs">
using System.Reflection;
using System.Runtime.CompilerServices;
 
[assembly: AssemblyTitle("ST_19338c2d3c5d43d1b77d01b996ae1485.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("Varigence")]
[assembly: AssemblyProduct("ST_19338c2d3c5d43d1b77d01b996ae1485.csproj")]
[assembly: AssemblyCopyright("")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
 
[assembly: AssemblyVersion("1.0.*")]</File>
                <File Path="ScriptMain.cs">
 
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.Globalization;
 
    [System.AddIn.AddIn("ScriptMain", Version = "1.0", Publisher = "", Description = "")]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
 
        public void Main()
        {
             try
            {
                string s = Convert.ToString(Dts.Variables["User::<#=sSourceTableName#>_FileName"].Value);
                string strRegEx = Convert.ToString(Dts.Variables["User::<#=sSourceTableName#>_RegEx_DateTime"].Value);
                string strDateTimePattern = Convert.ToString(Dts.Variables["User::<#=sSourceTableName#>_DateTimePattern"].Value);

                Regex r = new Regex(strRegEx);
                Match m = r.Match(s);

                if (m.Success)
                {
                    DateTime dt = DateTime.ParseExact(m.Value, strDateTimePattern, CultureInfo.InvariantCulture);
                    Dts.Variables["User::SysSrcGenerationDateTime"].Value = dt.ToString();
                }
                else
                {
                    Dts.Variables["User::SysSrcGenerationDateTime"].Value = DateTime.Now.ToString();
                }
            }
            catch (Exception e)
            {
                Dts.Variables["User::SysSrcGenerationDateTime"].Value = DateTime.Now.ToString();
                Dts.Events.FireWarning(0, "Pars Datetime in filename", e.Message, String.Empty, 0);
            }
            
            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
                </File>
            </Files>
            <ReadWriteVariables>
                <Variable Namespace="User" DataType="String" VariableName="SysSrcGenerationDateTime" />
            </ReadWriteVariables>
            <ReadOnlyVariables>
                <Variable Namespace="User" DataType="Int32" VariableName="<#=sSourceTableName#>_DateTimePattern"/>
                <Variable Namespace="User" DataType="Int32" VariableName="<#=sSourceTableName#>_RegEx_DateTime"/>
                <Variable Namespace="User" DataType="Int32" VariableName="<#=sSourceTableName#>_FileName"/>
            </ReadOnlyVariables>
        </ScriptTaskProject>
